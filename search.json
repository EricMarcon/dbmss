[{"path":"https://ericmarcon.github.io/dbmss/articles/bandwidth.html","id":"estimation-of-the-density-of-neighbors","dir":"Articles","previous_headings":"","what":"Estimation of the density of neighbors","title":"Bandwidth choice","text":"\\(K_d\\) function (Duranton Overman 2005) probability density find neighbor given distance apart point interest finite point process. \\(K^{emp}\\) function integrates weights points: density probability find employee \\(r\\) apart employee interest. \\(m\\) function (Lang, Marcon, Puech 2014) ratio neighbors interest distance \\(r\\) normalized value whole domain. functions require smoothing observed data: probability find neighbor exactly \\(r\\) apart arbitrary point zero neighbors around \\(r\\) apart considered. density function used purpose. applies kernel density estimation. \\(dbmss\\), Gaussian kernels used following Duranton Overman (2005). Actually, important choice kernel density estimation type kernel bandwidth. bandwidth defines close \\(r\\) distance two points must influence estimation density \\(r\\). small bandwidth considers closest values estimation close data. large bandwidth considers points gives smoother estimation.","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/bandwidth.html","id":"available-algorithms","dir":"Articles","previous_headings":"","what":"Available algorithms","title":"Bandwidth choice","text":"Duranton Overman (2005), original paper introducing \\(K_d\\) function, used optimal bandwidth according Silverman (1986), .e. argument bw = \"nrd0\" function density. default choice functions \\(dbmss\\), .e. argument Original = TRUE Kdhat, mhat similar functions. better choice may Original = FALSE apply estimation Sheather Jones (1991), .e. argument bw = \"SJ\" function density, better theoretical support. result usually less smoothed. following figure shows difference estimation \\(m\\) function applied paracou16 point set: red curve original estimation, black one uses Sheather Jones bandwidth.","code":"library(\"dbmss\") ## Loading required package: Rcpp ## Loading required package: spatstat.explore ## Loading required package: spatstat.data ## Loading required package: spatstat.geom ## spatstat.geom 3.2-1 ## Loading required package: spatstat.random ## spatstat.random 3.1-5 ## Loading required package: nlme ## spatstat.explore 3.2-1 # Sheather and Jones bandwidth in black plot(mhat(paracou16, , ReferenceType=\"Q. Rosea\", Original=FALSE), main=\"\", legend=FALSE) # Original bandwith in red plot(mhat(paracou16, , ReferenceType=\"Q. Rosea\"), col=\"red\", main=\"\", add=TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/articles/bandwidth.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Bandwidth choice","text":"data used algorithms set distances pairs points. \\(dbmss\\), pairs points less twice maximum value \\(r\\) considered: distant pairs points little interest estimate functions based number neighbors points. default arguments, almost point pairs included, except distant ones, .e. two thirds window’s diameter apart. user wants focus small distances, .e. choose \\(r\\) much less default value, distant point pairs (twice max value \\(r\\)) ignored, resulting smaller bandwidth consequently acute (less smoothed) estimation functions. following figure shows effect estimation \\(K_d\\) function applied paracou16 point set. default distance range used black curve. red curve function estimated 30 meters , resulting narrower bandwith: curve \\(K_d\\) less smoothed.  approximated algorithm used calculate \\(K_d\\) \\(m\\) retains point pairs twice max value \\(r\\) rounds distances 2048 (number can increased Approximate argument) equally-spaced values. set distances (actually, corresponding least pair points) used choose bandwidth. Simulations show approximated algorithm yields bandwidths similar obtained exact computation.","code":"plot(Kdhat(paracou16, , ReferenceType=\"Q. Rosea\", Original=FALSE), ylim=c(0, 0.008), main=\"\") plot(Kdhat(paracou16, r=0:30 , ReferenceType=\"Q. Rosea\", Original=FALSE), main=\"\", col=\"red\", add=TRUE) # Exact computation in black plot(Kdhat(paracou16, , ReferenceType=\"Q. Rosea\", Original=FALSE), main=\"\") # Approximated computation in green plot(Kdhat(paracou16, , ReferenceType=\"Q. Rosea\", Original=FALSE, Approximate = 1), main=\"\", col=\"green\", add=TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/articles/bandwidth.html","id":"fine-tuning","dir":"Articles","previous_headings":"","what":"Fine tuning","title":"Bandwidth choice","text":"users can choose multiply bandwidth argument Adjust. Values 1 smooth density estimation; 1, sharpen .","code":"# Default bandwith in black plot(Kdhat(paracou16, , ReferenceType=\"Q. Rosea\", Original=FALSE), ylim=c(0, 0.008), main=\"\") # Adjusted (half) bandwidth in red plot(Kdhat(paracou16, , ReferenceType=\"Q. Rosea\", Original=FALSE, Adjust = 1/2), main=\"\", col=\"red\", add=TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/articles/bandwidth.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Bandwidth choice","text":"Density estimation heavily relies choice bandwidth. \\(dbmss\\), several choices influence value. first one original, .e. following Duranton Overman (2005), acute algorithm Sheather Jones (1991). , distances taken account, .e. argument r (actually, maximum value) must chosen carefully. large r max value increases bandwidth since distant pair points taken account. Decreasing r allows focusing close neighbors: smaller bandwidth used function estimations less smoothed, especially small distances. Last, bandwidth can arbitrarily modified Adjust argument necessary. default values arguments (especially r) good choice obtain standard estimations \\(K_d\\) \\(m\\) functions. consistency original estimation \\(K_d\\) Duranton Overman (2005) important, Original = FALSE even better. Whatever user’s choices, bandwidth chosen way estimation distance-based function confidence envelope according null hypothesis, allowing detect departures oberved data null hypothesis consistently.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/articles/dbmss.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"dbmss","text":"main data format wmppp weighted, marked point pattern. inherits ppp class spatstat package. wmppp object can created coordinates points, type weight.  example dataset provided: point pattern Paracou forest French Guiana. Two species trees identified, trees type “”. Point weights basal area, square centimeters.","code":"library(\"dbmss\") # Draw the coordinates of 10 points X <- runif(10) Y <- runif(10) # Draw the point types. PointType   <- sample(c(\"A\", \"B\"), 10, replace=TRUE) # Plot the point pattern. Weights are set to 1 ant the window is adjusted autoplot(wmppp(data.frame(X, Y, PointType))) # Plot (second column of marks is Point Types)  autoplot(paracou16,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")"},{"path":"https://ericmarcon.github.io/dbmss/articles/dbmss.html","id":"main-functions","dir":"Articles","previous_headings":"","what":"Main functions","title":"dbmss","text":"main functions packages designed calculate distance-based measures spatial structure. non-parametric statistics able summarize test spatial distribution (concentration, dispersion) points. classical, topographic functions Ripley’s K provided spatstat package supported dbmss convenience. Relative functions available dbmss . \\(M\\) \\(m\\) \\(K_d\\) functions. bivariate \\(M\\) function can calculated Q. Rosea trees around V. Americana trees:","code":"autoplot(Mhat(paracou16, , \"V. Americana\", \"Q. Rosea\"), main=\"\")"},{"path":"https://ericmarcon.github.io/dbmss/articles/dbmss.html","id":"confidence-envelopes","dir":"Articles","previous_headings":"","what":"Confidence envelopes","title":"dbmss","text":"Confidence envelopes various null hypotheses can calculated. univariate distribution Q. Rosea tested null hypothesis random location.  Significant concentration detected 10 20 meters.","code":"autoplot(KdEnvelope(paracou16, , ReferenceType=\"Q. Rosea\", Global=TRUE), main=\"\")"},{"path":"https://ericmarcon.github.io/dbmss/articles/dbmss.html","id":"full-documentation","dir":"Articles","previous_headings":"","what":"Full documentation","title":"dbmss","text":"https://ericmarcon.github.io/dbmss/","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"rationale-and-statistical-background","dir":"Articles","previous_headings":"","what":"Rationale and statistical background","title":"dbmss Package Reference","text":"consider map points often represents establishments economic geography trees vegetation science. points two marks: type (industrial sector, species…) weight (number employees, basal area…). want apply point pattern variety exploratory statistics functions distance points, able test null hypothesis independence point locations. functions either topographic, absolute relative. can interpreted ratio observed number neighbors expected number neighbors points located independently . reference neighbor points type, functions univariate, study concentration dispersion. bivariate types differ, address colocation types. detail approach .","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"topographic-homogeneous-functions","dir":"Articles","previous_headings":"Rationale and statistical background","what":"Topographic, homogeneous functions","title":"dbmss Package Reference","text":"Topographic, homogeneous functions Ripley’s \\(K\\) derivative \\(g\\). null hypothesis Poisson homogeneous process: rejecting means process underlying observed pattern either homogeneous independent. functions applied homogeneity assumed independence tested comparing observed values function confidence envelope CSR. Bivariate functions tested null hypothesis random labeling (points locations kept unchanged marks redistributed randomly) population independence (reference point type kept unchanged, neighbor point type shifted) following Goreaud Pélissier (2003). random labeling hypothesis considers points preexist marks result process test (e.g. dead trees independently distributed forest?). population independence one considers points belong two different populations spatial structure wants test whether independent . Edge effect correction compulsory compute topographic functions: points located close boundaries less neighbors lack knowledge outside observation window. spatstat package provides corrections following Ripley (1988), use .","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"topographic-inhomogeneous-functions","dir":"Articles","previous_headings":"Rationale and statistical background","what":"Topographic, inhomogeneous functions","title":"dbmss Package Reference","text":"\\(K_{inhom}\\) (Baddeley, Møller, Waagepetersen 2000) generalization \\(K\\) inhomogeneous processes: tests independence points assuming intensity process known. Empirically, generally estimated data assumptions way relying theoretical knowledge process. null hypothesis (random position) pattern comes inhomogeneous Poisson process intensity, can simulated. Applying \\(K_{inhom}\\) single point type allows using random location null hypothesis, following Duranton Overman (2005): observed points (marks) shuffled among observed locations test independence. Bivariate \\(K_{inhom}\\) null hypotheses may random labeling population independence defined Marcon Puech (2010): reference points kept unchanged, points redistributed across observed locations. \\(K_{mm}\\) (Penttinen 2006; Penttinen, Stoyan, Henttonen 1992) generalizes \\(K\\) weighted points (weights continuous marks points). null hypothesis dbmss random location. Penttinen, Stoyan, Henttonen (1992) inferred point process point pattern, used inferred process simulate null hypothesis patterns. requires advanced spatial statistics techniques knowledge process generally available. random location hypothesis way draw null patterns simply, ignoring stochasticity point process. \\(D\\) (Diggle Chetwynd 1991) function compares \\(K\\) function points interest (cases) points (controls). null hypothesis random labeling.","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"absolute-functions","dir":"Articles","previous_headings":"Rationale and statistical background","what":"Absolute functions","title":"dbmss Package Reference","text":"seminal paper, Duranton Overman (Duranton Overman 2005) study distribution industrial establishments Great Britain. Every establishment, represented point, characterized position (geographic coordinates), sector activity (point type) number employees (point weight). \\(K_d\\) function (Duranton Overman 2005) probability density find neighbor given distance apart point interest finite point process. \\(K^{emp}\\) function integrates weights points: density probability find employee \\(r\\) apart employee interest. \\(K_d\\) \\(K^{emp}\\) absolute measures since value normalized measure space reference: binomial process, \\(K_d\\) increases proportionally \\(r\\) window large enough ignore edge effects (probability density proportional perimeter circle radius \\(r\\), Bonneu Thomas-Agnan 2015), edge effects make decrease 0 \\(r\\) becomes larger window’s size: bell-shaped curve. \\(K_d\\) values interpreted compared confidence envelope null hypothesis, random location. Bivariate functions null hypotheses random labeling, following Duranton Overman (2005), .e. point types redistributed across locations weights kept unchanged, population independence (\\(K_{inhom}\\)). corrected edge effects. \\(K_d\\) designed characterize spatial structure economic sector, comparing distribution whole activity. point view, considered relative function Marcon Puech (2010). prefer accurate distinguish strict relative functions directly calculate ratio difference number points type interest total number points. makes relative null hypothesis: changing random location (univariate \\(K_{inhom}\\)) make univariate \\(K_d\\) behave topographic function (testing independence distribution supposing intensity whole activity). \\(K_d\\) leading tool spatial economics. great number applications can found literature confirms recent interest distance-based methods spatial economics. recent major study can found Ellison, Glaeser, Kerr (2010).","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"relative-functions","dir":"Articles","previous_headings":"Rationale and statistical background","what":"Relative functions","title":"dbmss Package Reference","text":"univariate bivariate \\(M\\) function (Marcon Puech 2010) ratio neighbors interest distance \\(r\\) normalized value whole domain. null hypotheses \\(K_d\\)’s. suffer edge effects. Marcon Puech (2010) show \\(M\\) function respect axioms generally accepted good properties evaluate geographic concentration spatial economics (Combes Overman 2004; Duranton Overman 2005). \\(m\\) (Lang, Marcon, Puech 2014) density function measuring ratio \\(M\\), distance \\(r\\).","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"unification","dir":"Articles","previous_headings":"Rationale and statistical background","what":"Unification","title":"dbmss Package Reference","text":"Empirically, estimators can seen variations unique framework: neighbors reference point counted, number averaged divided reference measure. Last, average local result divided reference value, calculated whole point pattern instead around point. Choosing reference neighbor point types allows defining univariate bivariate functions, counting neighbors distance defines cumulative density functions, taking area number points reference measure defines topographic relative functions. steps detailed two functions clarify : focus Ripley’s \\(g\\) Marcon Puech’s \\(M\\) bivariate function. See Marcon Puech (2017) full review. Reference points denoted \\(x_i\\), neighbor points \\(x_j\\). density functions \\(g\\), neighbors \\(x_i\\) counted chosen distance \\(r\\): \\[n\\left(x_i,r\\right){\\rm =}\\sum_{j{\\rm ,\\ }\\ne j}{k\\left(\\left\\|x_i{\\rm -}x_j\\right\\|,r\\right)c\\left(,j\\right)}\\] \\(k(\\left\\|x_i{\\rm -}x_j\\right\\|,r)\\) kernel estimator, necessary evaluate number neighbors distance \\(r\\), \\(c(,j)\\) edge-effect correction (points located close boundaries less neighbors lack knowledge outside observation window). compute bivariate \\(M\\) function, reference points particular type marked point pattern: \\(x_i \\\\mathcal{R}\\), \\(\\mathcal{R}\\) set points reference type. Neighbors chosen type denoted \\(x_j \\\\mathcal{N}\\). cumulative functions \\(M\\), neighbors counted \\(r\\): \\[n\\left(x_i,r\\right){\\rm =}\\sum_{x_j \\\\mathcal{N}, \\ne j}{{\\mathbf 1}\\left(\\left\\|x_i{\\rm -}x_j\\right\\|\\le r\\right)w\\left(x_j\\right)}\\] Points can weighted, \\(w(x_j)\\) neighbor’s weight. number neighbors averaged . \\(n\\) number reference points: \\[\\bar{n}\\left(r\\right)=\\frac{1}{n}\\sum_i{n\\left(x_i,r\\right)}\\] average number neighbors compared reference measure. may measure space (perimeter circle radius \\(r\\) \\(g\\)), defining topographic functions: \\[z\\left(r\\right)=2 \\pi r\\] may also average number neighbors types relative function \\(M\\): \\[z\\left(r\\right)=\\frac{1}{n}\\sum_{j,\\ne j}{{\\mathbf 1}\\left(\\left\\|x_i{\\rm -}x_j\\right\\|\\le r\\right)w\\left(x_j\\right)}\\] Finally, \\(\\frac{\\bar{n}(r)}{z(r)}\\) compared ratio computed whole window. \\(g\\): \\[\\frac{\\bar{n}_0}{z_0}{\\rm =}\\frac{n-1}{}\\] \\(\\) area window, \\(\\bar{n}_0\\) \\(z_0\\) limit values \\(\\bar{n}(r)\\) \\(z(r)\\) \\(r\\) gets larger window’s size. \\(M\\), comes: \\[\\frac{{\\bar{n}}_0}{z_0}=\\sum_i{\\frac{W_\\mathcal{N}}{W-w\\left(x_i\\right)}}\\] \\(W_\\mathcal{N}\\) total weight neighbor points, \\(W\\) points. Finally, despite functions quite different (density vs. cumulative, topographic vs. relative, univariate vs. bivariate), estimators can written \\({\\frac{{\\bar{n}}}{z}}/{\\frac{{\\bar{n}}_0}{z_0}}\\). value (except absolute functions) can interpreted location quotient: \\(g(r)=2\\) \\(M(r)=2\\) means twice neighbors observed () distance \\(r\\) expected average, .e. ignoring point locations window. appropriate function chosen among toolbox according question raised.","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"package-content","dir":"Articles","previous_headings":"","what":"Package content","title":"dbmss Package Reference","text":"dbmss package contains full (within limits literature reviewed section 2) set functions characterize spatial structure point pattern, including tools compute confidence interval counterfactual. allows addressing big datasets thanks C++ code used calculate distances pairs points (using Rcpp RcppParallel infrastructure: Eddelbuettel François 2011; Allaire et al. 2015). Computational requirements actually issue starting say 10,000 points (see Ellison, Glaeser, Kerr 2010 instance). Memory requirement \\(O(n)\\), .e. proportional number points store location type. use loops calculate distances increment summary statistics rather store distance matrix \\(O(n^2)\\), following Scholl Brenner (2015). Computation time \\(O(n^2)\\) \\(n(n-1)/2\\) pair distances must calculated. consider planar points patterns (sets points 2-dimensional space) marks special kind: point comes continuous mark (weight) discrete one (type). call special type point pattern weighted, marked, planar point patterns define objects class wmppp, derives ppp class defined spatstat. Marks dataframe two columns, PointWeight containing weights points, PointTypes containing types, factors. wmppp object can created wmppp() function accepts dataframe argument, converted ppp object .wmppp(). Starting csv file containing point coordinates, type weight four columns, wmppp object can created just reading file read.csv() applying wmppp() result. Options available specify observation window guess point coordinates set default weights types points dataframe, see package help details. simplest code create wmppp 100 points follows. draws point coordinates 0 1, creates wmppp default window, points type named weight 1.","code":"library(\"dbmss\") ## Loading required package: Rcpp ## Loading required package: spatstat.explore ## Loading required package: spatstat.data ## Loading required package: spatstat.geom ## spatstat.geom 3.2-1 ## Loading required package: spatstat.random ## spatstat.random 3.1-5 ## Loading required package: nlme ## spatstat.explore 3.2-1 Pattern <- wmppp(data.frame(X=runif(100), Y=runif(100))) summary(Pattern) ## Marked planar point pattern:  100 points ## Average intensity 102.9038 points per square unit ##  ## Coordinates are given to 8 decimal places ##  ## Mark variables: PointWeight, PointType ## Summary: ##   PointWeight PointType ##  Min.   :1    All:100   ##  1st Qu.:1              ##  Median :1              ##  Mean   :1              ##  3rd Qu.:1              ##  Max.   :1              ##  ## Window: rectangle = [0.004359, 0.9922431] x [0.0029645, 0.9866648] units ##                     (0.9879 x 0.9837 units) ## Window area = 0.971782 square units"},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"distance-based-functions","dir":"Articles","previous_headings":"Package content","what":"Distance-based functions","title":"dbmss Package Reference","text":"functions named Xhat X name function: Ripley’s \\(g\\) \\(K\\), \\(K\\)’s normalization, Besag’s \\(L\\) (1977); Penttinen’s \\(K_{mm}\\) \\(L_{mm}\\); Diggle Chetwynd’s \\(D\\); Baddeley et al.’s \\(K_{inhom}\\) derivative \\(g_{inhom}\\); Marcon Puech’s \\(M\\); Duranton Overman’s \\(K_d\\) (including weighted version \\(K^{emp}\\)). suffix hat used avoid confusion functions R: D exists stats package example. Arguments : weighted, marked planar point pattern (wmppp class object). window can polygon binary image, spatstat. vector distances. Optionally reference neighbor point type calculate bivariate functions, equivalently types cases controls \\(D\\) function. optional arguments, specific functions. Topographic functions require edge-effect corrections, provided spatstat: best correction systematically used. Relative functions ignore window. Technical details provided help files. functions return fv object, defined spatstat, can plotted.","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"confidence-envelopes","dir":"Articles","previous_headings":"Package content","what":"Confidence envelopes","title":"dbmss Package Reference","text":"classical confidence intervals, calculated Monte-Carlo simulations (Kenkel 1988) obtained XEnvelope functions, X function’s name. Arguments number simulations run, risk level, function null hypothesis simulate. functions return dbmssEnvelope object can plotted. Null hypotheses discussed Goreaud Pélissier (2003) topographic functions \\(K\\) Marcon Puech (2010) relative functions. null hypothesis univariate functions random position (points drawn Poisson process topographic functions) random location (points redistributed across actual locations relative functions). Bivariate functions support random labeling population independence null hypotheses. possible values arguments detailed help file function. Building confidence envelope way problematic test repeated distance. underestimation risk discussed Loosmore Ford (2006). Duranton Overman (2005) proposed global envelope computed repeated elimination simulations reaching extreme value distance desired level reached. argument Global = TRUE used obtain instead local one.","code":""},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"examples","dir":"Articles","previous_headings":"Package content","what":"Examples","title":"dbmss Package Reference","text":"illustrate main features package two examples. first one comes economic literature (Bonneu 2007) 1  map emergencies urban area Toulouse, France, year 2004 (33 km south north) shows () 20,820 emergencies recorded (many points confused figure scale) (b) locations 10 percent serious ones. workload associated emergency (number men \\(\\times\\) hours required) known. original study tested dependence workload location emergencies: exclude null hypothesis random labeling. complementary approach : consider 10 percent serious emergencies, .e. caused highest workload. \\(K_d\\) may detect concentration (dispersion) , distance \\(r\\) serious emergency, probability find another serious emergency greater (lower) finding emergency whatever workload: Emergencies data frame contains point coordinates (meters) columns X Y workload column M. second line code creates vector containing factor describing workload separate 10% higher values. wmppp object created , containing points mark. KdEnvelope function run 0 10km steps 100m serious emergencies. figure shows 10% serious emergencies dispersed distribution emergencies distances 10km.  solid, black curve \\(K_d\\). dotted red curve average simulated value shaded area confidence envelope null hypothesis random location. risk level 5%, 1000 simulations run. distances meters. opens way discuss optimal location fire stations. second example uses paracou16 point pattern provided package. represents distribution trees 4.1-ha tropical forest plot Paracou field station French Guiana (Gourlet-Fleury, Guehl, Laroussinie 2004). contains 2426 trees, whose species either Qualea rosea, Vouacapoua americana (one 300 species). Weights basal areas (area stems virtually cut 1.3 meter ground), measured square centimeters. map, circles centered trees forest plot (containing rectangle 200m wide 250m long). Circle sizes proportional basal areas trees. question test dependence distributions two species interest. Bivariate \\(M(r)\\) calculated \\(r\\) 0 30 meters. 1000 simulations run build global confidence envelope.  \\(M(r)\\) values Qualea rosea around Vouacapoua Americana plotted. solid, black curve \\(M\\). dotted red curve average simulated value. shaded area confidence envelope. \\(M=1\\) expected points independently distributed. risk level 5%, 1000 simulations run. Distances meters. calculated function \\(M\\), showing repulsion V. Americana Q. rosea 30 m. Significance unclear, since observed values function close lower bound envelope. complete study, larger dataset allowing significant results, can found Marcon, Puech, Traissac (2012).","code":"load(\"CSBIGS.Rdata\") Category <- cut(Emergencies$M, quantile(Emergencies$M, c(0, 0.9, 1)),    labels = c(\"Other\", \"Biggest\"), include.lowest = TRUE) X <- wmppp(data.frame(X=Emergencies$X, Y=Emergencies$Y, PointType=Category), win=Region) X$window$units <- c(\"meter\",\"meters\") X2 <- split(X) marks(X2$Other) <- rep(1, X2$Other$n) marks(X2$Biggest) <- rep(1, X2$Biggest$n) par(mfrow=c(1,2), mar=c(0,0,0,0))   plot(X2$Other, main=\"\", maxsize=1, legend=FALSE) text(514300,  1826800, \"a\") plot(X2$Biggest, main=\"\", maxsize=1, legend=FALSE) text(514300,  1826800, \"b\") par(mfrow=c(1,1)) KdE <- KdEnvelope(X, r=seq(0, 10000, 100), NumberOfSimulations=1000, ReferenceType=\"Biggest\", Global=TRUE) autoplot(KdE, main=\"\") autoplot(paracou16,   labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\") Envelope <- MEnvelope(paracou16, r = seq(0, 30, 2), NumberOfSimulations     = 1000, Alpha = 0.05, ReferenceType = \"V. Americana\", NeighborType     = \"Q. Rosea\", SimulationType = \"RandomLabeling\", Global = TRUE) autoplot(Envelope, main=\"\", ylim=c(0, 20))"},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"goodness-of-fit-test","dir":"Articles","previous_headings":"Package content","what":"Goodness-of-fit test","title":"dbmss Package Reference","text":"Goodness--fit test \\(K\\) proposed Diggle (1983), applied \\(K\\) Loosmore Ford (2006) \\(M\\) Marcon, Puech, Traissac (2012). calculates distance actual values function average value obtained simulations null hypothesis. distance calculated simulated point pattern, returned \\(p\\)-value test ratio simulations whose distance larger real point pattern. test performed GoFtest function whose argument envelope previously calculated (actually, function uses simulation values). Applied example Paracou trees, \\(p\\)-value :","code":"GoFtest(Envelope) ## [1] 0.267"},{"path":"https://ericmarcon.github.io/dbmss/articles/reference.html","id":"ktest","dir":"Articles","previous_headings":"Package content","what":"Ktest","title":"dbmss Package Reference","text":"Ktest developed Lang Marcon (Lang Marcon 2013; Marcon, Traissac, Lang 2013). rely simulations returns \\(p\\)-value erroneously reject complete spatial randomness (CSR) given values \\(K\\). relies exact variance \\(K\\) calculated edge-effect corrections. works rectangular window. following example tests 1.5-ha subset paracou16 (100m 150m, origin southwestern corner). rejects CSR (p=0.0027).","code":"data(\"paracou16\") RectWindow <- owin(c(300, 400), c(0, 150)) X <- paracou16[RectWindow] (pKtest <- Ktest(X, seq(5, 50, 5))) ## [1] 0.002682576"},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Marcon. Author, maintainer. Gabriel Lang. Author. Stephane Traissac. Author. Florence Puech. Author.","code":""},{"path":"https://ericmarcon.github.io/dbmss/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eric Marcon, St{'e}phane Traissac, Florence Puech, Gabriel Lang (2015). Tools Characterize Point Patterns: dbmss R. Journal Statistical Software, 67(3), 1-15. doi:10.18637/jss.v067.c03","code":"@Article{,   title = {Tools to Characterize Point Patterns: {dbmss} for {R}},   author = {Eric Marcon and St{\\'e}phane Traissac and Florence Puech and Gabriel Lang},   journal = {Journal of Statistical Software, Code Snippets},   year = {2015},   volume = {67},   number = {3},   pages = {1--15},   doi = {10.18637/jss.v067.c03}, }"},{"path":"https://ericmarcon.github.io/dbmss/index.html","id":"distance-based-measures-of-spatial-structures-","dir":"","previous_headings":"","what":"Distance-Based Measures of Spatial Structures","title":"Distance-Based Measures of Spatial Structures","text":"dbmss R package simple computation spatial statistic functions distance characterize spatial structures mapped objects, including classical ones (Ripley’s K others) recent ones used spatial economists (Duranton Overman’s Kd, Marcon Puech’s M). relies spatstat core calculation.","code":""},{"path":"https://ericmarcon.github.io/dbmss/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Distance-Based Measures of Spatial Structures","text":"quick introduction vignette(\"dbmss\"). full documentation available package website. continuous update paper published Journal Statistical Software (Marcon et al., 2015).","code":""},{"path":"https://ericmarcon.github.io/dbmss/index.html","id":"reference","dir":"","previous_headings":"","what":"Reference","title":"Distance-Based Measures of Spatial Structures","text":"Marcon, E., Traissac, S., Puech, F. Lang, G. (2015). Tools Characterize Point Patterns: dbmss R. Journal Statistical Software. 67(3): 1-15.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/CheckdbmssArguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the arguments of a function of the package dbmss — CheckdbmssArguments","title":"Checks the arguments of a function of the package dbmss — CheckdbmssArguments","text":"function used internally verify arguments passed dbmss functions Mhat correct.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/CheckdbmssArguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the arguments of a function of the package dbmss — CheckdbmssArguments","text":"","code":"CheckdbmssArguments()"},{"path":"https://ericmarcon.github.io/dbmss/reference/CheckdbmssArguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the arguments of a function of the package dbmss — CheckdbmssArguments","text":"Returns TRUE stops problem detected.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/CheckdbmssArguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks the arguments of a function of the package dbmss — CheckdbmssArguments","text":"function compares arguments passed parent function type performs extra tests (e.g. risk threshold must 0 1). stops argument correct.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"Simulates point patterns according null hypothesis returns envelope D according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"","code":"DEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,            Cases, Controls, Intertype = FALSE, Global = FALSE,           verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. Cases One point types Controls One point types. Intertype Logical; TRUE, D computed Di Marcon Puech (2012). Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"null hypothesis random labeling: marks distributed randomly across points. envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/DEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the D function under its null hypothesis — DEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 20 to save time) r <- 0:30 NumberOfSimulations <- 20 Alpha <- .05 # Plot the envelope (after normalization by pi.r^2) autoplot(DEnvelope(X, r, NumberOfSimulations, Alpha,     \"V. Americana\", \"Q. Rosea\", Intertype = TRUE), ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the D function — Dhat","title":"Estimation of the D function — Dhat","text":"Estimates D function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the D function — Dhat","text":"","code":"Dhat(X, r = NULL, Cases, Controls = NULL, Intertype = FALSE, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the D function — Dhat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. Cases One point types. Controls One point types. NULL, controls types except cases. Intertype Logical; TRUE, D computed Di Marcon Puech (2012). CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the D function — Dhat","text":"Di function allows comparing structure cases controls around cases, say comparison made around points. advocated Arbia et al. (2008) formalized Marcon Puech (2012).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the D function — Dhat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the D function — Dhat","text":"Arbia, G., Espa, G. Quah, D. (2008). class spatial econometric methods empirical analysis clusters firms space. Empirical Economics 34(1): 81-103. Diggle, P. J. Chetwynd, . G. (1991). Second-Order Analysis Spatial Clustering Inhomogeneous Populations. Biometrics 47(3): 1155-1163. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the D function — Dhat","text":"computation Dhat relies spatstat functions Kest Kcross.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Dhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the D function — Dhat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate D r <- 0:30 (Paracou <- Dhat(paracou16, r, \"V. Americana\", \"Q. Rosea\", Intertype = TRUE)) #> Function value object (class ‘fv’) #> for the function r -> D(r) #> ................................................................ #>      Math.label     Description                                  #> r    r              distance argument r                          #> theo D[theo](r)     theoretical Poisson D(r)                     #> iso  hat(D)[iso](r) Ripley isotropic correction estimate of D(r) #> ................................................................ #> Default plot formula:  .~r #> where “.” stands for ‘theo’, ‘iso’ #> Recommended range of argument r: [0, 30] #> Available range of argument r: [0, 30]  # Plot (after normalization by pi.r^2) autoplot(Paracou, ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Dtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Distance table object. — Dtable","title":"Create a Distance table object. — Dtable","text":"Creates object class \"Dtable\" representing set points weights labels distances .","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Distance table object. — Dtable","text":"","code":"Dtable(Dmatrix, PointType = NULL, PointWeight = NULL)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Dtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Distance table object. — Dtable","text":"Dmatrix square matrix containing distances. PointType vector describing point types. length must correspond number points. PointWeight vector describing point weights. length must correspond number points.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Distance table object. — Dtable","text":"distance matrix necessarily symmetric, distances understood common sense, mathematical sense. Asymmetric distances appropriate paths points one-way . points origin lines, targets columns. diagonal matrix must contain zeros (distance point 0), distances must positive (can 0).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Dtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Distance table object. — Dtable","text":"object class \"Dtable\". list: Dmatrix distance matrix. n number points. marks list two items: PointType, vector factors containing point types PointWeight, numeric vector weights.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Dtable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Distance table object. — Dtable","text":"","code":"# A Dtable containing two points Dmatrix <- matrix(c(0,1,1,0), nrow=2) PointType <- c(\"Type1\", \"Type2\") PointWeight <- c(2,3) Dtable(Dmatrix, PointType, PointWeight) #> $Dmatrix #>      [,1] [,2] #> [1,]    0    1 #> [2,]    1    0 #>  #> $n #> [1] 2 #>  #> $marks #> $marks$PointType #> [1] Type1 Type2 #> Levels: Type1 Type2 #>  #> $marks$PointWeight #> [1] 2 3 #>  #>  #> attr(,\"class\") #> [1] \"Dtable\""},{"path":"https://ericmarcon.github.io/dbmss/reference/FillEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform simulation values to an fv — FillEnvelope","title":"Transform simulation values to an fv — FillEnvelope","text":"function used internally calculate envelope values store fv.object.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/FillEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform simulation values to an fv — FillEnvelope","text":"","code":"FillEnvelope(Envelope, Alpha, Global)"},{"path":"https://ericmarcon.github.io/dbmss/reference/FillEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform simulation values to an fv — FillEnvelope","text":"Envelope envelope object (envelope) containing simulated function values. Alpha risk level. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/FillEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform simulation values to an fv — FillEnvelope","text":"Returns envelope object (envelope) hi lo values calculated simlations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GlobalEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the global confidence interval of simulations — GlobalEnvelope","title":"Estimation of the global confidence interval of simulations — GlobalEnvelope","text":"Calculates global confidence interval envelope sensu Duranton Overman (2005) according simulations null hypothesis function.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GlobalEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the global confidence interval of simulations — GlobalEnvelope","text":"","code":"GlobalEnvelope(Simulations, Alpha)"},{"path":"https://ericmarcon.github.io/dbmss/reference/GlobalEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the global confidence interval of simulations — GlobalEnvelope","text":"Simulations object class fv, see fv.object, containing simulated values. Alpha risk level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GlobalEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the global confidence interval of simulations — GlobalEnvelope","text":"global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GlobalEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the global confidence interval of simulations — GlobalEnvelope","text":"matrix two lines: Glo lower bound envelope Ghi upper bound envelope","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GlobalEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the global confidence interval of simulations — GlobalEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"Calculates risk reject null hypothesis erroneously, based distribution simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"","code":"GoFtest(Envelope)"},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"Envelope envelope object (envelope) containing simulations simfuns attribute. may result estimation function dbmss package obtained envelope function argument savefuns=TRUE.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"test introduced Diggle(1983) extensively developped Loosmore Ford (2006) K, applied M Marcon et al. (2012).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"p-value.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"Diggle, P. J. (1983). Statistical analysis spatial point patterns. Academic Press, London. 148 p. Loosmore, N. B.  Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E., F. Puech S. Traissac (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"support exists literature apply GoF test non-cumulative functions (g, Kd...). Ktest much better test (rely simulations) limited K function complete spatial randomness (CSR) rectangle window.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/GoFtest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Goodness of Fit test between a distance based measure of spatial structure and simulations of its null hypothesis — GoFtest","text":"","code":"# Simulate a Matern (Neyman Scott) point pattern nclust <- function(x0, y0, radius, n) {   return(runifdisc(n, radius, centre=c(x0, y0))) } X <- rNeymanScott(20, 0.2, nclust, radius=0.3, n=10) autoplot(as.wmppp(X))   # Calculate confidence envelope (should be 1000 simulations, reduced to 50 to save time) r <- seq(0, 0.3, 0.01) NumberOfSimulations <- 50 Alpha <- .10 Envelope <- KEnvelope(as.wmppp(X), r, NumberOfSimulations, Alpha) autoplot(Envelope, ./(pi*r^2) ~ r)   # GoF test. Power is correct if enough simulations are run (say >1000). paste(\"p-value =\", GoFtest(Envelope)) #> [1] \"p-value = 0\""},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"Simulates point patterns according null hypothesis returns envelope K according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"","code":"KEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,            ReferenceType = \"\", NeighborType = ReferenceType,            SimulationType = \"RandomPosition\", Precision = 0, Global = FALSE,           verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. Default point types. NeighborType One point types. default, reference type. SimulationType string describing null hypothesis simulate. null hypothesis may   \"RandomPosition\": points drawn Poisson process (default);   \"RandomLabeling\": randomizes point types, keeping locations unchanged;   \"PopulationIndependence\": keeps reference points unchanged, shifts point locations. Precision Accuracy point coordinates, measured part distance unit. See rRandomPositionK. Default 0 approximation. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67. Silverman, B. W. (1986). Density estimation statistics data analysis. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/KEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the K function under its null hypothesis — KEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 20 to save time) r <- 0:30 NumberOfSimulations <- 20 # Plot the envelope autoplot(KEnvelope(X, r, NumberOfSimulations), ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"Simulates point patterns according null hypothesis returns envelope Kd according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"","code":"KdEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05, ReferenceType,             NeighborType = ReferenceType, Weighted = FALSE, Original = TRUE,             Approximate = ifelse(X$n < 10000, 0, 1), Adjust = 1, MaxRange = \"ThirdW\",             StartFromMinR = FALSE,            SimulationType = \"RandomLocation\", Global = FALSE,             verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"X point pattern (wmppp.object) Dtable object. r vector distances. NULL, default value set: 512 equally spaced values used, first 256 returned, corresponding half maximum distance points (following Duranton Overman, 2005). NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. NeighborType One point types. default, reference type. Weighted Logical; TRUE, estimates Kemp function. Original Logical; TRUE (default), original bandwidth selection Duranton Overman (2005) following Silverman (2006: eq 3.31) used. FALSE, calculated following Sheather Jones (1991), .e. state art. See bw.SJ details. Approximate 0 (1 good choice), exact distances pairs points rounded 1024 times Approximate single values equally spaced 0 largest distance. technique (Scholl Brenner, 2015) allows saving lot memory addressing large point sets (default value 1 10000 points). Increasing Approximate allows better precision cost proportional memory use. Ignored X Dtable object. Adjust Force automatically selected bandwidth (following Silverman, 1986) multiplied Adjust. Setting values lower one (1/2 example) sharpen estimation. 1, Original ignored. MaxRange maximum value r consider, ignored r NULL. Default \"ThirdW\", one third diameter window. choices \"HalfW\", \"QuarterW\" \"D02005\".   \"HalfW\", \"QuarterW\" half quarter diameter window.   \"D02005\" median distance observed points, following Duranton Overman (2005). \"ThirdW\" close \"DO2005\" advantage independent point types chosen ReferenceType NeighborType, simplify comparisons different types. \"D02005\" approximated \"ThirdW\" Approximate 0.   X Dtable object, diameter window taken max distance points. StartFromMinR Logical; TRUE, points assumed minimum observed distance, Kd estimated : assumed 0. FALSE, default, distances smoothed \\(r=0\\).   Ignored Approximate 0: , estimation always starts \\(r=0\\). SimulationType string describing null hypothesis simulate. null hypothesis may   \"RandomLocation\": points redistributed actual locations (default);   \"RandomLabeling\": randomizes point types, keeping locations weights unchanged;   \"PopulationIndependence\": keeps reference points unchanged, randomizes point locations. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67. Scholl, T. Brenner, T. (2015) Optimizing distance-based methods large data sets, Journal Geographical Systems 17(4): 333-351. Silverman, B. W. (1986). Density estimation statistics data analysis. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/KdEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the Kd function under its null hypothesis — KdEnvelope","text":"","code":"data(paracou16) autoplot(paracou16[paracou16$marks$PointType==\"Q. Rosea\"])   # Calculate confidence envelope plot(KdEnvelope(paracou16, , ReferenceType=\"Q. Rosea\", Global=TRUE))  # Center of the confidence interval Kdhat(paracou16, ReferenceType=\"\") -> kd lines(kd$Kd ~ kd$r, lty=3, col=\"green\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Kd function — Kdhat","title":"Estimation of the Kd function — Kdhat","text":"Estimates Kd function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Kd function — Kdhat","text":"","code":"Kdhat(X, r = NULL, ReferenceType, NeighborType = ReferenceType, Weighted = FALSE,        Original = TRUE, Approximate = ifelse(X$n < 10000, 0, 1), Adjust = 1,        MaxRange = \"ThirdW\", StartFromMinR = FALSE, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Kd function — Kdhat","text":"X weighted, marked planar point pattern (wmppp.object) Dtable object. r vector distances. NULL, default value set: 512 equally spaced values used, smallest distance points half diameter window. ReferenceType One point types. \"\", points considered (default value; NeighborType ignored ) estimate average value simulated Kd values null hypothesis RandomLocation (Marcon Puech, 2012). NeighborType One point types. default, reference type. Weighted Logical; TRUE, estimates Kemp function. Original Logical; TRUE (default), original bandwidth selection Duranton Overman (2005) following Silverman (1986: eq 3.31) used. FALSE, calculated following Sheather Jones (1991), .e. state art. See bw.SJ details. Approximate 0 (1 good choice), exact distances pairs points rounded 1024 times Approximate single values equally spaced 0 largest distance. technique (Scholl Brenner, 2015) allows saving lot memory addressing large point sets (default value 1 10000 points). Increasing Approximate allows better precision cost proportional memory use. Ignored X Dtable object. Adjust Force automatically selected bandwidth (following Original) multiplied Adjust. Setting values lower one (1/2 example) sharpen estimation. MaxRange maximum value r consider, ignored r NULL. Default \"ThirdW\", one third diameter window. choices \"HalfW\", \"QuarterW\" \"D02005\".   \"HalfW\", \"QuarterW\" half quarter diameter window.   \"D02005\" median distance observed points, following Duranton Overman (2005). \"ThirdW\" close \"DO2005\" advantage independent point types chosen ReferenceType NeighborType, simplify comparisons different types. \"D02005\" approximated \"ThirdW\" Approximate 0.   X Dtable object, diameter window taken max distance points. StartFromMinR Logical; TRUE, points assumed minimum observed distance, Kd estimated : assumed 0. FALSE, distances smoothed \\(r=0\\).   Ignored Approximate 0: , estimation always starts \\(r=0\\). CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the Kd function — Kdhat","text":"Kd density, absolute measure point pattern structure. Kd computed efficiently building matrix distances point pairs calculating density distribution (default values r density function). kernel estimator Gaussian. weighted Kd function named Kemp (emp employees) Duranton Overman (2005). X Dtable object, maximum value r obtained geometry window rather caculating median distance points suggested Duranton Overman (2005) save (lot ) calculation time.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Kd function — Kdhat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the Kd function — Kdhat","text":"Estimating Kd relies calculating distances, exactly approximately (Approximate 0).   distances smoothed estimating probability density.   Reflection used estimate density close lowest distance, minimum observed distance (StartFromMinR TRUE) 0: distances 4 times estimation kernel bandwith apart lowest distance duplicated (symmetrically respect lowest distance) avoid edge effects (underestimation density close lowest distance). Density estimation heavily relies bandwith.   Starting version 2.7, optimal bandwith computed distribution distances pairs points twice maximum distance considered.   consequence choosing smaller range distances argument r results less smoothed \\(Kd\\) values.   default values (r = NULL, MaxRange = \"ThirdW\") almost pairs points (except 2/3 window diameter apart) taken account determine bandwith.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Kd function — Kdhat","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67. Scholl, T. Brenner, T. (2015) Optimizing distance-based methods large data sets, Journal Geographical Systems 17(4): 333-351. Sheather, S. J. Jones, M. C. (1991) reliable data-based bandwidth selection method kernel density estimation. Journal Royal Statistical Society series B, 53, 683-690. Silverman, B. W. (1986). Density estimation statistics data analysis. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Kdhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Kd function — Kdhat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate Kd (Paracou <- Kdhat(paracou16, , \"Q. Rosea\", \"V. Americana\")) #> Function value object (class ‘fv’) #> for the function r -> Kd(r) #> ................................. #>    Math.label Description         #> r  r          distance argument r #> Kd hat(Kd)(r) Estimated Kd(r)     #> ................................. #> Default plot formula:  .~r #> where “.” stands for ‘Kd’ #> Recommended range of argument r: [0, 102.11] #> Available range of argument r: [0, 102.11] #> Unit of length: 1 meter # Plot autoplot(Paracou)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the K function — Khat","title":"Estimation of the K function — Khat","text":"Estimates K function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the K function — Khat","text":"","code":"Khat(X, r = NULL, ReferenceType = \"\", NeighborType = ReferenceType, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the K function — Khat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. ReferenceType One point types. Default point types. NeighborType One point types. default, reference type. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the K function — Khat","text":"K cumulative, topographic measure point pattern structure.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the K function — Khat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the K function — Khat","text":"Ripley, B. D. (1976). Foundations Stochastic Geometry. Annals Probability 4(6): 995-998. Ripley, B. D. (1977). Modelling Spatial Patterns. Journal Royal Statistical Society B 39(2): 172-212.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the K function — Khat","text":"computation Khat relies spatstat functions Kest Kcross.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Khat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the K function — Khat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate K r <- 0:30 (Paracou <- Khat(paracou16, r)) #> Function value object (class ‘fv’) #> for the function r -> K(r) #> ................................................................ #>      Math.label     Description                                  #> r    r              distance argument r                          #> theo K[pois](r)     theoretical Poisson K(r)                     #> iso  hat(K)[iso](r) Ripley isotropic correction estimate of K(r) #> ................................................................ #> Default plot formula:  .~r #> where “.” stands for ‘iso’, ‘theo’ #> Recommended range of argument r: [0, 30] #> Available range of argument r: [0, 30] #> Unit of length: 1 meter  # Plot (after normalization by pi.r^2) autoplot(Paracou, ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"Simulates point patterns according null hypothesis returns envelope Kinhom according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"","code":"KinhomEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,                 ReferenceType = \"\", lambda = NULL, SimulationType = \"RandomPosition\",                 Global = FALSE, verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run. Alpha risk level. ReferenceType One point types. Default point types. lambda estimation point pattern density, obtained density.ppp function. SimulationType string describing null hypothesis simulate. null hypothesis, may    \"RandomPosition\": points drawn inhomogenous Poisson process (intensity either lambda estimated X);    \"RandomLocation\": points redistributed across actual locations;   \"RandomLabeling\": randomizes point types, keeping locations unchanged;   \"PopulationIndependence\": keeps reference points unchanged, redistributes others across actual locations. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"random location null hypothesis Duranton Overman (2005). appropriate test univariate Kinhom function single point type, redistributing point locations.   allows fixing lambda along simulations warning message can ignored. random labeling hypothesis appropriate bivariate Kinhom function. population independence hypothesis Marcon Puech (2010). envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. Puech, F. (2010). Measures Geographic Concentration Industries: Improving Distance-Based Methods. Journal Economic Geography 10(5): 745-762. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/KinhomEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the Kinhom function under its null hypothesis — KinhomEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Density of all trees lambda <- density.ppp(X, bw.diggle(X)) plot(lambda) V.americana <- X[X$marks$PointType==\"V. Americana\"] plot(V.americana, add=TRUE) #> Plotting the first column of marks   # Calculate Kinhom according to the density of all trees # and confidence envelope (should be 1000 simulations, reduced to 4 to save time) r <- 0:30 NumberOfSimulations <- 4 Alpha <- .10 autoplot(KinhomEnvelope(X, r,NumberOfSimulations, Alpha, ,      SimulationType=\"RandomPosition\", lambda=lambda), ./(pi*r^2) ~ r) #> Warning: Envelope may be invalid; argument ‘lambda’ appears to have been fixed."},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the inhomogenous K function — Kinhomhat","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"Estimates Kinhom function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"","code":"Kinhomhat(X, r = NULL, ReferenceType = \"\", lambda = NULL, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. ReferenceType One point types. Default point types. lambda estimation point pattern density, obtained density.ppp function. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"Kinhom cumulative, topographic measure inhomogenous point pattern structure. default, density estimation performed points density.ppp using optimal bandwith (bw.diggle). can calculated separately (see example), including pixels point pattern large default estimation succeed, provided argument lambda:   Arbia et al. (2012) example use another point pattern reference estimate density. Bivariate Kinhom currently supported.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"Baddeley, . J., J. Moller, et al. (2000). Non- semi-parametric estimation interaction inhomogeneous point patterns. Statistica Neerlandica 54(3): 329-350. Arbia, G., G. Espa, et al. (2012). Clusters firms inhomogeneous space: high-tech industries Milan. Economic Modelling 29(1): 3-11.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"computation Kinhomhat relies spatstat functions Kinhom, density.ppp bw.diggle.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Kinhomhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the inhomogenous K function — Kinhomhat","text":"","code":"data(paracou16)  # Density of all trees lambda <- density.ppp(paracou16, bw.diggle(paracou16)) plot(lambda) # Reduce the point pattern to one type of trees V.americana <- paracou16[paracou16$marks$PointType==\"V. Americana\"] plot(V.americana, add=TRUE) #> Plotting the first column of marks   # Calculate Kinhom according to the density of all trees r <- 0:30 autoplot(Kinhomhat(paracou16, r, \"V. Americana\", lambda), ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"Simulates point patterns according null hypothesis returns envelope Lmm according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"","code":"KmmEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05, ReferenceType = \"\",             Global = FALSE, verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. Others ignored. Default point types. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/KmmEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — KmmEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 4 to save time) r <- seq(0, 30, 2) NumberOfSimulations <- 4 Alpha <- .10 autoplot(KmmEnvelope(X, r, NumberOfSimulations, Alpha), ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Kmm function — Kmmhat","title":"Estimation of the Kmm function — Kmmhat","text":"Estimates Kmm function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Kmm function — Kmmhat","text":"","code":"Kmmhat(X, r = NULL, ReferenceType = \"\", CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Kmm function — Kmmhat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. ReferenceType One point types. Others ignored. Default point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the Kmm function — Kmmhat","text":"Kmm function used test independence marks.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Kmm function — Kmmhat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Kmm function — Kmmhat","text":"Penttinen, ., Stoyan, D. Henttonen, H. M. (1992). Marked Point Processes Forest Statistics. Forest Science 38(4): 806-824. Penttinen, . (2006). Statistics Marked Point Patterns. Yearbook Finnish Statistical Society. Finnish Statistical Society, Helsinki: 70-91.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the Kmm function — Kmmhat","text":"function computed using markcorrint spatstat.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Kmmhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Kmm function — Kmmhat","text":"","code":"data(paracou16) # Keep only 50% of points to run this example X <- as.wmppp(rthin(paracou16, 0.5)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate Kmm r <- seq(0, 30, 2) (Paracou <- Kmmhat(X, r)) #> Function value object (class ‘fv’) #> for the function r -> K[mm](r) #> ............................................................................. #>      Math.label              Description                                      #> r    r                       distance argument r                              #> theo {K[mm][]^{pois}}(r)     theoretical Poisson K[mm](r)                     #> iso  {hat(K[mm])[]^{iso}}(r) Ripley isotropic correction estimate of K[mm](r) #> ............................................................................. #> Default plot formula:  .~.x #> where “.” stands for ‘iso’, ‘theo’ #> Recommended range of argument r: [0, 50] #> Available range of argument r: [0, 50] #> Unit of length: 1 meter  # Plot autoplot(Paracou, ./(pi*r^2) ~ r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":null,"dir":"Reference","previous_headings":"","what":"Test of a point pattern against Complete Spatial Randomness — Ktest","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"Tests point pattern CSR using values K function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"","code":"Ktest(X, r)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"X point pattern (ppp.object). Marks ignored. window must rectangle sensu spatstat (tested .rectangle). r vector distances.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"test returns risk reject CSR erroneously, .e. p-value test, based distribution K function. r includes 0, silently removed neighbor point can found distance 0.   longer r, accurate test theory cost computation time first, computation accuracy matrix size length r must inverted.   10 values r seems reasonable choice.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"p-value.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"Lang, G. Marcon, E. (2013). Testing randomness spatial point patterns Ripley statistic. ESAIM: Probability Statistics. 17: 767-788. Marcon, E., S. Traissac, Lang, G. (2013). Statistical Test Ripley's Function Rejection Poisson Null Hypothesis. ISRN Ecology 2013(Article ID 753475): 9.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"Gabriel Lang <Gabriel.Lang@agroparistech.fr>, Eric Marcon<Eric.Marcon@agroparistech.fr>","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Ktest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test of a point pattern against Complete Spatial Randomness — Ktest","text":"","code":"# Simulate a Matern (Neyman Scott) point pattern nclust <- function(x0, y0, radius, n) {   return(runifdisc(n, radius, centre=c(x0, y0))) } X <- rNeymanScott(20, 0.1, nclust, radius=0.2, n=5) autoplot(as.wmppp(X))   # Test it Ktest(X, r=seq(0.1, .5, .1)) #> [1] 0.1966849"},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"Simulates point patterns according null hypothesis returns envelope L according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"","code":"LEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,            ReferenceType = \"\", NeighborType = \"\", SimulationType = \"RandomPosition\",            Precision = 0, Global = FALSE, verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. Default point types. NeighborType One point types. Default point types. SimulationType string describing null hypothesis simulate. null hypothesis may \"RandomPosition\": points drawn Poisson process (default); \"RandomLabeling\": randomizes point types, keeping locations unchanged; \"PopulationIndependence\": keeps reference points unchanged, randomizes point locations. Precision Accuracy point coordinates, measured part distance unit. See rRandomPositionK. Default 0 approximation. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/LEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the L function under its null hypothesis — LEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 20 to save time) r <- 0:30 NumberOfSimulations <- 20 # Plot the envelope autoplot(LEnvelope(X, r, NumberOfSimulations))"},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the L function — Lhat","title":"Estimation of the L function — Lhat","text":"Estimates L function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the L function — Lhat","text":"","code":"Lhat(X, r = NULL, ReferenceType = \"\", NeighborType = \"\", CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the L function — Lhat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. ReferenceType One point types. Default point types. NeighborType One point types. Default point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the L function — Lhat","text":"L normalized version K: \\(L(r)=\\sqrt{\\frac{K}{\\pi}}-r\\).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the L function — Lhat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the L function — Lhat","text":"Besag, J. E. (1977). Comments Ripley's paper. Journal Royal Statistical Society B 39(2): 193-195.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the L function — Lhat","text":"L originally defined \\(L(r)=\\sqrt{\\frac{K}{\\pi}}\\). used \\(L(r)=\\sqrt{\\frac{K}{\\pi}}-r\\) part literature normalization easier plot.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Lhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the L function — Lhat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate L r <- 0:30 (Paracou <- Lhat(paracou16, r)) #> Function value object (class ‘fv’) #> for the function r -> L(r) #> ................................................................ #>      Math.label     Description                                  #> r    r              distance argument r                          #> theo L[pois](r)     theoretical Poisson L(r)                     #> iso  hat(L)[iso](r) Ripley isotropic correction estimate of L(r) #> ................................................................ #> Default plot formula:  .~r #> where “.” stands for ‘iso’, ‘theo’ #> Recommended range of argument r: [0, 30] #> Available range of argument r: [0, 30] #> Unit of length: 1 meter  # Plot autoplot(Paracou)"},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"Simulates point patterns according null hypothesis returns envelope Lmm according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"","code":"LmmEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05, ReferenceType = \"\",              Global = FALSE, verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. Others ignored. Default point types. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/LmmEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the Lmm function under its null hypothesis — LmmEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 4 to save time) r <- seq(0, 30, 2) NumberOfSimulations <- 4 Alpha <- .10 autoplot(LmmEnvelope(X, r, NumberOfSimulations, Alpha))"},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the Lmm function — Lmmhat","title":"Estimation of the Lmm function — Lmmhat","text":"Estimates Lmm function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the Lmm function — Lmmhat","text":"","code":"Lmmhat(X, r = NULL, ReferenceType = \"\", CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the Lmm function — Lmmhat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. ReferenceType One point types. Others ignored. Default point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the Lmm function — Lmmhat","text":"Lmm normalized version Kmm: \\(Lmm(r)=\\sqrt{\\frac{Kmm}{\\pi}}-r\\).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the Lmm function — Lmmhat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the Lmm function — Lmmhat","text":"Penttinen, ., Stoyan, D. Henttonen, H. M. (1992). Marked Point Processes Forest Statistics. Forest Science 38(4): 806-824. Espa, G., Giuliani, D. Arbia, G. (2010). Weighting Ripley's K-function account firm dimension analysis spatial concentration. Discussion Papers, 12/2010. Universita di Trento, Trento: 26.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Lmmhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the Lmm function — Lmmhat","text":"","code":"data(paracou16) # Keep only 50% of points to run this example X <- as.wmppp(rthin(paracou16, 0.5)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate Lmm r <- seq(0, 30, 2) (Paracou <- Lmmhat(X, r)) #> Function value object (class ‘fv’) #> for the function r -> L[mm](r) #> ............................................................................. #>      Math.label              Description                                      #> r    r                       distance argument r                              #> theo {L[mm][]^{pois}}(r)     theoretical Poisson L[mm](r)                     #> iso  {hat(L[mm])[]^{iso}}(r) Ripley isotropic correction estimate of L[mm](r) #> ............................................................................. #> Default plot formula:  .~.x #> where “.” stands for ‘iso’, ‘theo’ #> Recommended range of argument r: [0, 50] #> Available range of argument r: [0, 50] #> Unit of length: 1 meter  # Plot autoplot(Paracou)"},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"Simulates point patterns according null hypothesis returns envelope M according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"","code":"MEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,           ReferenceType, NeighborType = ReferenceType,            CaseControl = FALSE, SimulationType = \"RandomLocation\", Global = FALSE,           verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"X point pattern (wmppp.object) Dtable object. r vector distances. NULL, default value set: 32 unequally spaced values used half maximum distance points \\(d_m\\). first value 0, first steps small (\\(d_m/200\\)) incresase progressively \\(d_m/20\\). NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. NeighborType One point types, equal reference type default caculate univariate M. CaseControl Logical; TRUE, case-control version M computed. ReferenceType points cases, NeighborType points controls. SimulationType string describing null hypothesis simulate. null hypothesis may   \"RandomLocation\": points redistributed actual locations (default);   \"RandomLabeling\": randomizes point types, keeping locations weights unchanged;   \"PopulationIndependence\": keeps reference points unchanged, randomizes point locations. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/MEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the M function under its null hypothesis — MEnvelope","text":"","code":"data(paracou16) # Keep only 50% of points to run this example X <- as.wmppp(rthin(paracou16, 0.5)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 4 to save time) NumberOfSimulations <- 4 Alpha <- .10 autoplot(MEnvelope(X, , NumberOfSimulations, Alpha,      \"V. Americana\", \"Q. Rosea\", FALSE, \"RandomLabeling\"))"},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the M function — Mhat","title":"Estimation of the M function — Mhat","text":"Estimates M function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the M function — Mhat","text":"","code":"Mhat(X, r = NULL, ReferenceType, NeighborType = ReferenceType,     CaseControl = FALSE, Individual = FALSE, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the M function — Mhat","text":"X weighted, marked planar point pattern (wmppp.object) Dtable object. r vector distances. NULL, default value set: 64 unequally spaced values used half maximum distance points \\(d_m\\). first value 0, first steps small (\\(d_m/800\\)) increase progressively \\(d_m/40\\). ReferenceType One point types. NeighborType One point types. default, reference type. CaseControl Logical; TRUE, case-control version M computed. ReferenceType points cases, NeighborType points controls. Individual Logical; TRUE, values function around individual point returned. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the M function — Mhat","text":"M weighted, cumulative, relative measure point pattern structure. value distance ratio neighbors NeighborType points around ReferenceType points, normalized value windows. CaseControl TRUE, ReferenceType points cases NeighborType points controls. univariate concentration cases calculated NeighborType equal ReferenceType, controls considered counting points around cases (Marcon et al., 2012). makes sense sampling design points ReferenceType (cases) sample points (controls) recorded. , whole distribution points better represented controls alone.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the M function — Mhat","text":"object class fv, see fv.object, can plotted directly using plot.fv. Individual set TRUE, object also contains value function around individual ReferenceType point taken reference point. column names fv \"M_\" followed point names, .e. row names marks point pattern.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the M function — Mhat","text":"Marcon, E. Puech, F. (2010). Measures Geographic Concentration Industries: Improving Distance-Based Methods. Journal Economic Geography 10(5): 745-762. Marcon, E., F. Puech S. Traissac (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11. Marcon, E., Puech, F. (2017). Typology Distance-Based Measures Spatial Concentration. Regional Science Urban Economics 62:56-67","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/Mhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the M function — Mhat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate M autoplot(Mhat(paracou16, , \"V. Americana\", \"Q. Rosea\"))"},{"path":"https://ericmarcon.github.io/dbmss/reference/Rcpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary functions to count point neighbors — parallelCountNbd","title":"Auxiliary functions to count point neighbors — parallelCountNbd","text":"C++ routines used fast count neighbors.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Rcpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary functions to count point neighbors — parallelCountNbd","text":"","code":"parallelCountNbd(r, x, y, Weight, IsReferenceType, IsNeighborType) parallelCountNbdCC(r, x, y, Weight, IsReferenceType, IsNeighborType) parallelCountNbdm(x, y, ReferencePoints) parallelCountNbdDt(r, Dmatrix, Weight, IsReferenceType, IsNeighborType) parallelCountNbdDtCC(r, Dmatrix, Weight, IsReferenceType, IsNeighborType) DistKd(x, y, PointWeight, Weight, Dist, IsReferenceType, IsNeighborType) CountNbdKd(r, x, y, Weight, Nbd, IsReferenceType, IsNeighborType)"},{"path":"https://ericmarcon.github.io/dbmss/reference/Rcpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary functions to count point neighbors — parallelCountNbd","text":"r vector distances. x vector x coordinates. y vector y coordinates. Dmatrix matrix distances. PointWeight vector point weights. Weight vector point weights. ReferencePoints vector pont indices. Nbd matrix store weight neighbors. Dist vector point-pair distances. IsReferenceType boolean vector recognize reference points. IsNeighborType boolean vector recognize neighbor points.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/Rcpp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Auxiliary functions to count point neighbors — parallelCountNbd","text":"routines called internally.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.Dtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts data to class Dtable — as.Dtable","title":"Converts data to class Dtable — as.Dtable","text":"Creates object class \"Dtable\" representing set points weights labels distances .. generic method.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.Dtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts data to class Dtable — as.Dtable","text":"","code":"as.Dtable(X, ...)   # S3 method for ppp as.Dtable(X, ...)   # S3 method for data.frame as.Dtable(X, ...)"},{"path":"https://ericmarcon.github.io/dbmss/reference/as.Dtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts data to class Dtable — as.Dtable","text":"X Data converted \"Dtable\". ... Extra arguments.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.Dtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts data to class Dtable — as.Dtable","text":"generic method, implemented ppp data.frame. Data first converted (wmppp.object). , distance matrix points calculated marks kept.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.Dtable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts data to class Dtable — as.Dtable","text":"object class \"Dtable\".","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/as.wmppp.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts data to class wmppp — as.wmppp","title":"Converts data to class wmppp — as.wmppp","text":"Creates Weighted, Marked, Planar Point Pattern, .e. object class \"wmppp\" representing two-dimensional point pattern weights labels. generic method.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.wmppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts data to class wmppp — as.wmppp","text":"","code":"as.wmppp(X, ...)   # S3 method for ppp as.wmppp(X, ...)   # S3 method for data.frame as.wmppp(X, window = NULL, unitname = NULL, ...)"},{"path":"https://ericmarcon.github.io/dbmss/reference/as.wmppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts data to class wmppp — as.wmppp","text":"X Data converted weighted, marked, planar point pattern (wmppp.object) window object calls \"owin\" (owin.object). unitname Name unit length. Either single character string, vector two character strings giving singular plural forms, respectively. ... Extra arguments.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.wmppp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts data to class wmppp — as.wmppp","text":"generic method, implemented ppp data.frame: dataset X object class \"ppp\" (ppp.object), marks converted point weights numeric point types factors. Default weights set 1, default types \"\". marks dataframe column names equal PointType PointWeight, modified. Row names dataframe preserved row names marks, identify points. dataset X dataframe, see wmppp.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/as.wmppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts data to class wmppp — as.wmppp","text":"object class \"wmppp\".","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot methods to plot dbmss objects — autoplot","title":"ggplot methods to plot dbmss objects — autoplot","text":"S3 methods autoplot generic.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot methods to plot dbmss objects — autoplot","text":"","code":"# S3 method for envelope autoplot(object, fmla, ..., ObsColor = \"black\",          H0Color = \"red\", ShadeColor = \"grey75\", alpha = 0.3, main = NULL,          xlab = NULL, ylab = NULL, LegendLabels = NULL)   # S3 method for fv autoplot(object, fmla, ..., ObsColor = \"black\",          H0Color = \"red\", ShadeColor = \"grey75\", alpha = 0.3, main = NULL,          xlab = NULL, ylab = NULL, LegendLabels = NULL)   # S3 method for wmppp autoplot(object, ..., show.window = TRUE,          MaxPointTypes = 6, Other = \"Other\",         main = NULL, xlab = NULL, ylab = NULL, LegendLabels = NULL,          labelSize = \"Weight\", labelColor = \"Type\", palette=\"Set1\",         windowColor = \"black\", windowFill = \"transparent\", alpha = 1)"},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot methods to plot dbmss objects — autoplot","text":"object object plotted. fmla R language formula determining variables expressions plotted. Either formula object, string can parsed formula. See plot.fv. ... Extra arguments, currently unused. ObsColor color line representing observed values function. H0Color color line representing null hypothesis values function. ShadeColor color confidence envelope. alpha opacity confidence envelope (function values) points (maps), 0 1. main title plot. xlab, ylab axes labels. LegendLabels vector characters. first two items describe observed null-hypothesis curves, third last item confidence interval.   used plots two curves (typically observed expected values).   default `NULL` display full description functions. show.window `TRUE`, borders window containing points shown point map. MaxPointTypes maximum number different point types show. point set contains , less frequent ones gathered \"\". number must limited readability exceed number colors offered palette. name point types gathered \"\". labelSize guide point size legend point maps, .e. `PointSize` mark represents. labelColor guide point color legend point maps, .e. `PointType` mark represents. palette color palette used display point types maps. See scale_colour_brewer windowColor color used draw limits windows point maps. windowFill color used fill windows point maps.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ggplot methods to plot dbmss objects — autoplot","text":"Plots `wmppp` objects single representation point types point weights.   Rectangular polygonal windows (see owin.object) supported mask windows ignored (use `plot` method necessary).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot methods to plot dbmss objects — autoplot","text":"ggplot object.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggplot methods to plot dbmss objects — autoplot","text":"Eric Marcon <Eric.Marcon@agroparistech.fr>, parts code spatstat.explore::plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot methods to plot dbmss objects — autoplot","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X)   # Plot the envelope (should be 1000 simulations, reduced to 20 to save time) autoplot(KdEnvelope(X, ReferenceType=\"Q. Rosea\", NumberOfSimulations=20))   # With a formula and a compact legend autoplot(KEnvelope(X, NumberOfSimulations=20),      ./(pi*r^2) ~ r,     LegendLabels=c(\"Observed\", \"Expected\", \"Confidence\\n enveloppe\"))"},{"path":"https://ericmarcon.github.io/dbmss/reference/dbmss-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Based Measures of Spatial Structures — dbmss-package","title":"Distance Based Measures of Spatial Structures — dbmss-package","text":"Simple computation spatial statistic functions distance characterize spatial structures mapped objects, including classical ones (Ripley's K others) recent ones used spatial economists (Duranton Overman's Kd, Marcon Puech's M). Relies spatstat core calculation.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/dbmss-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Distance Based Measures of Spatial Structures — dbmss-package","text":"Eric Marcon, Gabriel Lang, Stephane Traissac, Florence Puech Maintainer: Eric Marcon <Eric.Marcon@agroparistech.fr>","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/dbmss-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distance Based Measures of Spatial Structures — dbmss-package","text":"Marcon, E., Puech, F. (2003). Evaluating Geographic Concentration Industries Using Distance-Based Methods. Journal Economic Geography, 3(4), 409-428. Marcon, E. Puech, F. (2010). Measures Geographic Concentration Industries: Improving Distance-Based Methods. Journal Economic Geography 10(5): 745-762. Marcon, E., Puech F. Traissac, S. (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11. Lang G., Marcon E. Puech F. (2014) Distance-Based Measures Spatial Concentration: Introducing Relative Density Function. HAL 01082178, 1-18. Marcon, E., Traissac, S., Puech, F. Lang, G. (2015). Tools Characterize Point Patterns: dbmss R. Journal Statistical Software. 67(3): 1-15. Marcon, E. Puech, F. (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/dbmssEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Class of envelope of function values (fv) — dbmssEnvelope.object","title":"Class of envelope of function values (fv) — dbmssEnvelope.object","text":"class \"dbmssEnvelope\", .e. particular type see envelope represent several estimates function confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/dbmssEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class of envelope of function values (fv) — dbmssEnvelope.object","text":"\"dbmssEnvelope\" objects similar envelope objects. differences risk level chosen (instead simulation rank use envelope), rank calculated (interpolation used necessary), global envelope can calculated following Duranton Overman (2005).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/dbmssEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class of envelope of function values (fv) — dbmssEnvelope.object","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/envelope.Dtable.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes simulation envelopes of a summary function. — envelope.Dtable","title":"Computes simulation envelopes of a summary function. — envelope.Dtable","text":"Prints useful summary confidence envelope class \"dbmssEnvelope\"","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/envelope.Dtable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes simulation envelopes of a summary function. — envelope.Dtable","text":"","code":"# S3 method for Dtable envelope(Y, fun = Kest, nsim = 99, nrank = 1, ...,            funargs = list(), funYargs = funargs, simulate = NULL,            verbose = TRUE, savefuns = FALSE, Yname = NULL, envir.simul = NULL)"},{"path":"https://ericmarcon.github.io/dbmss/reference/envelope.Dtable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes simulation envelopes of a summary function. — envelope.Dtable","text":"Y object class Dtable. fun Function computes desired summary statistic Y. nsim Number simulated point patterns generated computing envelopes. nrank Integer. Rank envelope value amongst nsim simulated values. rank 1 means minimum maximum simulated values used. ... Extra arguments passed fun. funargs list, containing extra arguments passed fun. funYargs Optional. list, containing extra arguments passed fun applied original data Y . simulate Optional. Specifies generate simulated point patterns. verbose Logical flag indicating whether print progress reports simulations. savefuns Logical flag indicating whether save simulated function values. Yname Character string used name data Y printing plotting results. envir.simul Environment evaluate expression simulate, current environment.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/envelope.Dtable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computes simulation envelopes of a summary function. — envelope.Dtable","text":"S3 method envelope Dtable objects.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/envelope.Dtable.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Computes simulation envelopes of a summary function. — envelope.Dtable","text":"Eric Marcon <Eric.Marcon@agroparistech.fr>. Relies envelope engine spatstat.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"Simulates point patterns according null hypothesis returns envelope g according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"","code":"gEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,           ReferenceType = \"\", NeighborType = \"\", SimulationType = \"RandomPosition\",          Global = FALSE, verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. Default point types. NeighborType One point types. Default point types. SimulationType string describing null hypothesis simulate. null hypothesis may \"RandomPosition\": points drawn Poisson process (default); \"RandomLabeling\": randomizes point types, keeping locations unchanged; \"PopulationIndependence\": keeps reference points unchanged, shifts point locations. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/gEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the g function under its null hypothesis — gEnvelope","text":"","code":"data(paracou16) # Keep only 20% of points to run this example X <- as.wmppp(rthin(paracou16, 0.2)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 10 to save time) r <- 0:40 NumberOfSimulations <- 10 # Plot the envelope autoplot(gEnvelope(X, r, NumberOfSimulations)) #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights' #> Warning: Selecting bandwidth *not* using 'weights'"},{"path":"https://ericmarcon.github.io/dbmss/reference/generic.spatstat.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for weighted, marked planar point patterns (of class wmppp) from spatstat — spatstat generic functions","title":"Methods for weighted, marked planar point patterns (of class wmppp) from spatstat — spatstat generic functions","text":"spatstat methods ppp.object applied wmppp.object.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/generic.spatstat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for weighted, marked planar point patterns (of class wmppp) from spatstat — spatstat generic functions","text":"","code":"# S3 method for wmppp sharpen(X, ...) # S3 method for wmppp split(...) # S3 method for wmppp superimpose(...) # S3 method for wmppp unique(x, ...) # S3 method for wmppp [(i, j, drop=FALSE, ..., clip=FALSE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/generic.spatstat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for weighted, marked planar point patterns (of class wmppp) from spatstat — spatstat generic functions","text":"X, x two-dimensional point pattern. object class \"wmppp\". ... Arguments passed ppp.object method. Subset index. Either valid subset index usual R sense, indicating points retained, window (object class \"owin\") delineating subset original observation window, pixel image logical values defining subset original observation window. j Redundant. Included backward compatibility. drop Logical value indicating whether remove unused levels marks, marks factor. clip Logical value indicating form window resulting point pattern, window. clip=FALSE (default), result window equal . clip=TRUE, resulting window intersection window x window .","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/generic.spatstat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods for weighted, marked planar point patterns (of class wmppp) from spatstat — spatstat generic functions","text":"spatstat methods ppp objects returning ppp object can applied wmppp return wpppp methods just call ppp.object method change class result convenience. spatstat functions rthin generic always return ppp.object applied wmppp.object. result may converted .wmppp.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/generic.spatstat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for weighted, marked planar point patterns (of class wmppp) from spatstat — spatstat generic functions","text":"object class \"wmppp\".","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the g function — ghat","title":"Estimation of the g function — ghat","text":"Estimates g function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the g function — ghat","text":"","code":"ghat(X, r = NULL, ReferenceType = \"\", NeighborType = \"\", CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the g function — ghat","text":"X weighted, marked, planar point pattern (wmppp.object). r vector distances. NULL, sensible default value chosen (512 intervals, 0 half diameter window) following spatstat. ReferenceType One point types. Default point types. NeighborType One point types. Default point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the g function — ghat","text":"computation ghat relies spatstat function sewpcf.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the g function — ghat","text":"object class fv, see fv.object, can plotted directly using plot.fv.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the g function — ghat","text":"Stoyan, D. Stoyan, H. (1994) Fractals, random shapes point fields: methods geometrical statistics. John Wiley Sons.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/ghat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the g function — ghat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate g r <- 0:30 (Paracou <- ghat(paracou16, r, \"Q. Rosea\", \"V. Americana\")) #> Warning: Selecting bandwidth *not* using 'weights' #> Function value object (class ‘fv’) #> for the function r -> g(r) #> ................................................................ #>      Math.label     Description                                  #> r    r              distance argument r                          #> theo g[pois](r)     theoretical Poisson g(r)                     #> iso  hat(g)[iso](r) Ripley isotropic correction estimate of g(r) #> ................................................................ #> Default plot formula:  .~r #> where “.” stands for ‘theo’, ‘iso’ #> Recommended range of argument r: [0, 30] #> Available range of argument r: [0, 30] #> Unit of length: 1 meter  # Plot autoplot(Paracou)"},{"path":"https://ericmarcon.github.io/dbmss/reference/is.wmppp.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether an object is a weighted, marked, planar point pattern — is.wmppp","title":"Test whether an object is a weighted, marked, planar point pattern — is.wmppp","text":"Check whether argument object class \"wmppp\" (wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/is.wmppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether an object is a weighted, marked, planar point pattern — is.wmppp","text":"","code":"is.wmppp(X)"},{"path":"https://ericmarcon.github.io/dbmss/reference/is.wmppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether an object is a weighted, marked, planar point pattern — is.wmppp","text":"X object","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/is.wmppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether an object is a weighted, marked, planar point pattern — is.wmppp","text":"TRUE X weighted, marked, planar point pattern, otherwise FALSE.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/kwmppp.html","id":null,"dir":"Reference","previous_headings":"","what":"Kriged, Weighted, Marked, Planar point pattern — kwmppp","title":"Kriged, Weighted, Marked, Planar point pattern — kwmppp","text":"Kriged, Weighted, Marked, Planar point pattern maps individiual values dbmss's.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/kwmppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kriged, Weighted, Marked, Planar point pattern — kwmppp","text":"","code":"kwmppp(X, fvind, ReferenceType = \"\", distance = stats::median(fvind$r),           AllowJitter = TRUE, Nbx = 128, Nby = 128, CheckArguments = TRUE)   # S3 method for kwmppp plot (x, ..., Contour = TRUE,    Palette = grDevices::topo.colors(128, alpha=1),    SuppressMargins = TRUE, Contournlevels = 10, Contourcol = \"dark red\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/kwmppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kriged, Weighted, Marked, Planar point pattern — kwmppp","text":"X point pattern (wmppp.object). fvind object class fv, see fv.object, obtained distance-based method, Mhat individual values (argument Individual = TRUE). ReferenceType point type used calculate function values.     default value \"\", .e. point types, generate error actual reference type different. distance distance function value must considered.     default value median distance used calculate function values. AllowJitter TRUE, duplicated points jittered avoid elimination kriging procedure. Nbx, Nby number columns rows (pixels) resulting map, 128 default.     Increase quality, paid increasing computing time. ... parameters passed image. x object class \"kwmppp\" plot. Contour TRUE, contours added map. Palette color palette map. SuppressMargins TRUE, margins around map suppressed. Contournlevels number levels contours. Contourcol color contour lines. CheckArguments TRUE (default), function arguments verified.     set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/kwmppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kriged, Weighted, Marked, Planar point pattern — kwmppp","text":"kmppp() produces object class \"kwmppp\" also autoKrige object can used produce alternative maps.   can plotted.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/kwmppp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kriged, Weighted, Marked, Planar point pattern — kwmppp","text":"","code":"ReferenceType <- \"V. Americana\"   NeighborType <- \"Q. Rosea\"   # Calculate individual intertype M(distance) values   fvind <- Mhat(paracou16, , ReferenceType, NeighborType, Individual=TRUE)   # Plot the point pattern with values of M(30 meters)   plot(kwmppp(paracou16, fvind, ReferenceType, distance=30)) #> [using ordinary kriging]   # Add the reference points to the plot   is.ReferenceType <- paracou16$marks$PointType == ReferenceType   points(x=paracou16$x[is.ReferenceType], y=paracou16$y[is.ReferenceType], pch=20)"},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"Simulates point patterns according null hypothesis returns envelope m according confidence level.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"","code":"mEnvelope(X, r = NULL, NumberOfSimulations = 100, Alpha = 0.05,           ReferenceType, NeighborType = ReferenceType, CaseControl = FALSE,           Original = TRUE, Approximate = ifelse(X$n < 10000, 0, 1), Adjust = 1,            MaxRange = \"ThirdW\", SimulationType = \"RandomLocation\", Global = FALSE,           verbose = interactive())"},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"X point pattern (wmppp.object). r vector distances. NULL, default value set: 512 equally spaced values used median distance points (following Duranton Overman, 2005). NumberOfSimulations number simulations run, 100 default. Alpha risk level, 5% default. ReferenceType One point types. NeighborType One point types, equal reference type default caculate univariate M. CaseControl Logical; TRUE, case-control version M computed. ReferenceType points cases, NeighborType points controls. Original Logical; TRUE (default), original bandwidth selection Duranton Overman (2005) following Silverman (1986: eq 3.31) used. FALSE, calculated following Sheather Jones (1991), .e. state art. See bw.SJ details. Approximate 0 (1 good choice), exact distances pairs points rounded 1024 times Approximate single values equally spaced 0 largest distance. technique (Scholl Brenner, 2015) allows saving lot memory addressing large point sets (default value 1 10000 points). Increasing Approximate allows better precision cost proportional memory use. Adjust Force automatically selected bandwidth (following Original) multiplied Adjust. Setting values lower one (1/2 example) sharpen estimation. MaxRange maximum value r consider, ignored r NULL. Default \"ThirdW\", one third diameter window. choices \"HalfW\", \"QuarterW\" \"D02005\".   \"HalfW\", \"QuarterW\" half quarter diameter window.   \"D02005\" median distance observed points, following Duranton Overman (2005). \"ThirdW\" close \"DO2005\" advantage independent point types chosen ReferenceType NeighborType, simplify comparisons different types. \"D02005\" approximated \"ThirdW\" Approximate 0. SimulationType string describing null hypothesis simulate. null hypothesis may   \"RandomLocation\": points redistributed actual locations (default);   \"RandomLabeling\": randomizes point types, keeping locations weights unchanged;   \"PopulationIndependence\": keeps reference points unchanged, randomizes point locations. Global Logical; TRUE, global envelope sensu Duranton Overman (2005) calculated. verbose Logical; TRUE, print progress reports simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"envelope local default, say computed separately distance. See Loosmore Ford (2006) discussion. global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"envelope object (envelope). methods print plot class. fv contains observed value function, average simulated value confidence envelope.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Kenkel, N. C. (1988). Pattern Self-Thinning Jack Pine: Testing Random Mortality Hypothesis. Ecology 69(4): 1017-1024. Lang G., Marcon E. Puech F. (2014) Distance-Based Measures Spatial Concentration: Introducing Relative Density Function. HAL 01082178, 1-18. Loosmore, N. B. Ford, E. D. (2006). Statistical inference using G K point pattern spatial statistics. Ecology 87(8): 1925-1931. Marcon, E. F. Puech (2017). typology distance-based measures spatial concentration. Regional Science Urban Economics. 62:56-67. Scholl, T. Brenner, T. (2015) Optimizing distance-based methods large data sets, Journal Geographical Systems 17(4): 333-351. Silverman, B. W. (1986). Density estimation statistics data analysis. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/m_Envelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the confidence envelope of the m function under its null hypothesis — mEnvelope","text":"","code":"data(paracou16) # Keep only 50% of points to run this example X <- as.wmppp(rthin(paracou16, 0.5)) autoplot(X,    labelSize = expression(\"Basal area (\" ~cm^2~ \")\"),    labelColor = \"Species\")   # Calculate confidence envelope (should be 1000 simulations, reduced to 4 to save time) NumberOfSimulations <- 4 Alpha <- .10 autoplot(mEnvelope(X, , NumberOfSimulations, Alpha,      \"V. Americana\", \"Q. Rosea\", Original = FALSE, SimulationType = \"RandomLabeling\"))"},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation of the m function — mhat","title":"Estimation of the m function — mhat","text":"Estimates m function","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation of the m function — mhat","text":"","code":"mhat(X, r = NULL, ReferenceType, NeighborType = ReferenceType,     CaseControl = FALSE, Original = TRUE, Approximate = ifelse(X$n < 10000, 0, 1),     Adjust = 1, MaxRange = \"ThirdW\", Individual = FALSE, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation of the m function — mhat","text":"X weighted, marked planar point pattern (wmppp.object) Dtable object. r vector distances. NULL, default value set: 512 equally spaced values used, smallest distance range defined MaxRange. points half diameter window. ReferenceType One point types. NeighborType One point types. default, reference type. CaseControl Logical; TRUE, case-control version M computed. ReferenceType points cases, NeighborType points controls. Original Logical; TRUE (default), original bandwidth selection Duranton Overman (2005) following Silverman (1986: eq 3.31) used. FALSE, calculated following Sheather Jones (1991), .e. state art. See bw.SJ details. Approximate 0 (1 good choice), exact distances pairs points rounded 1024 times Approximate single values equally spaced 0 largest distance. technique (Scholl Brenner, 2015) allows saving lot memory addressing large point sets (default value 1 10000 points). Increasing Approximate allows better precision cost proportional memory use. Ignored X Dtable object. Adjust Force automatically selected bandwidth (following Original) multiplied Adjust. Setting values lower one (1/2 example) sharpen estimation. MaxRange maximum value r consider, ignored r NULL. Default \"ThirdW\", one third diameter window. choices \"HalfW\", \"QuarterW\" \"D02005\".   \"HalfW\", \"QuarterW\" half quarter diameter window.   \"D02005\" median distance observed points, following Duranton Overman (2005). \"ThirdW\" close \"DO2005\" advantage independent point types chosen ReferenceType NeighborType, simplify comparisons different types. \"D02005\" approximated \"ThirdW\" Approximate 0.   X Dtable object, diameter window taken max distance points. Individual Logical; TRUE, values function around individual point returned. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation of the m function — mhat","text":"m weighted, density, relative measure point pattern structure (Lang et al., 2014). value distance ratio neighbors NeighborType points around ReferenceType points, normalized value windows. number neighbors distance estimated Gaussian kernel whose bandwith chosen optimally according Silverman (1986: eq 3.31). can sharpened smoothed multiplying Adjust. bandwidth Sheather Jones (1991) better slow calculate large point patterns sometimes fails. often sharper Silverman. X Dtable object, maximum value r obtained geometry window rather caculating median distance points suggested Duranton Overman (2005) save (lot ) calculation time. CaseControl TRUE, ReferenceType points cases NeighborType points controls. univariate concentration cases calculated NeighborType equal ReferenceType, controls considered counting points around cases (Marcon et al., 2012). makes sense sampling design points ReferenceType (cases) sample points (controls) recorded. , whole distribution points better represented controls alone.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation of the m function — mhat","text":"object class fv, see fv.object, can plotted directly using plot.fv. Individual set TRUE, object also contains value function around individual ReferenceType point taken reference point. column names fv \"m_\" followed point names, .e. row names marks point pattern.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimation of the m function — mhat","text":"Estimating m relies calculating distances, exactly approximately (Approximate 0).   distances smoothed estimating probability density.   contrast Kdhat, reflection used estimate density close lowest distance.   kernel estimation applied distances reference points neighbor points points.   Since m relative function, ratio densities calculated, makes features estimation vanish. Density estimation heavily relies bandwith.   Starting version 2.7, optimal bandwith computed distribution distances pairs points twice maximum distance considered.   consequence choosing smaller range distances argument r results less smoothed \\(m\\) values.   default values (r = NULL, MaxRange = \"ThirdW\") almost pairs points (except 2/3 window diameter apart) taken account determine bandwith.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation of the m function — mhat","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Lang G., Marcon E. Puech F. (2014) Distance-Based Measures Spatial Concentration: Introducing Relative Density Function. HAL 01082178, 1-18. Marcon, E., F. Puech S. Traissac (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11. Scholl, T. Brenner, T. (2015) Optimizing distance-based methods large data sets, Journal Geographical Systems 17(4): 333-351. Sheather, S. J. Jones, M. C. (1991) reliable data-based bandwidth selection method kernel density estimation. Journal Royal Statistical Society series B, 53, 683-690. Silverman, B. W. (1986). Density estimation statistics data analysis. Chapman Hall, London.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/m_hat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation of the m function — mhat","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate M autoplot(mhat(paracou16, , \"V. Americana\", \"Q. Rosea\"))"},{"path":"https://ericmarcon.github.io/dbmss/reference/paracou16.html","id":null,"dir":"Reference","previous_headings":"","what":"Paracou field station plot 16, partial map — paracou16","title":"Paracou field station plot 16, partial map — paracou16","text":"point pattern Paracou field station, French Guiana, managed Cirad.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/paracou16.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paracou field station plot 16, partial map — paracou16","text":"","code":"data(paracou16)"},{"path":"https://ericmarcon.github.io/dbmss/reference/paracou16.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paracou field station plot 16, partial map — paracou16","text":"object class ppp.object representing point pattern tree locations 250 x 300 meter sampling region. tree marked species (\"Q. Rosea\", \"V. Americana\" \"\"), basal area (square centimeters).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/paracou16.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Paracou field station plot 16, partial map — paracou16","text":"Permanent data census Paracou Marcon et al. (2012).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/paracou16.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Paracou field station plot 16, partial map — paracou16","text":"Gourlet-Fleury, S., Guehl, J. M. Laroussinie, O., Eds. (2004). Ecology & management neotropical rainforest. Lessons drawn Paracou, long-term experimental research site French Guiana. Paris, Elsevier. Marcon, E., F. Puech S. Traissac (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/paracou16.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paracou field station plot 16, partial map — paracou16","text":"","code":"data(paracou16) # Plot (second column of marks is Point Types)  autoplot(paracou16, which.marks=2, leg.side=\"right\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/print.dbmssEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a confidence envelope — print.dbmssEnvelope","title":"Print a confidence envelope — print.dbmssEnvelope","text":"Prints useful information confidence envelope class \"dbmssEnvelope\"","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/print.dbmssEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a confidence envelope — print.dbmssEnvelope","text":"","code":"# S3 method for dbmssEnvelope print(x, ...)"},{"path":"https://ericmarcon.github.io/dbmss/reference/print.dbmssEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a confidence envelope — print.dbmssEnvelope","text":"x object class \"dbmssEnvelope\". ... Ignored.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/print.dbmssEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print a confidence envelope — print.dbmssEnvelope","text":"\"dbmssEnvelope\" objects similar envelope objects. way printed different take account possibility building global envelope following Duranton Overman (2005):  global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/print.dbmssEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Print a confidence envelope — print.dbmssEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/print.dbmssEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a confidence envelope — print.dbmssEnvelope","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate intertype K envelope Envelope <- KEnvelope(paracou16, NumberOfSimulations = 20, Global = TRUE,   ReferenceType = \"V. Americana\", NeighborType = \"Q. Rosea\") #> Error in GlobalEnvelope(Sims, Alpha): Global envelope could not be calculated. More simulations are necessary. autoplot(Envelope) #> Error in eval(expr, envir, enclos): object 'Envelope' not found # print print(Envelope) #> Error in eval(expr, envir, enclos): object 'Envelope' not found"},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"Simulates point pattern according null hypothesis population independence defined K.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"","code":"rPopulationIndependenceK(X, ReferenceType, NeighborType, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"X weighted, marked, planar point pattern (wmppp.object). ReferenceType One point types. NeighborType One point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"Reference points kept unchanged, neighbor type point positions shifted rshift.   points lost point weights kept (set 1) since K function ignores .","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"new weighted, marked, planar point pattern (object class wmppp, see wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"Goreaud, F. et Pelissier, R. (2003). Avoiding misinterpretation biotic interactions intertype K12 fonction: population independence vs random labelling hypotheses. Journal Vegetation Science 14(5): 681-692.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for K — rPopulationIndependenceK","text":"","code":"# Simulate a point pattern with three types X <- rpoispp(50)  PointType   <- sample(c(\"A\", \"B\", \"C\"), X$n, replace=TRUE) PointWeight <- runif(X$n, min=1, max=10) X$marks <- data.frame(PointType, PointWeight) X <- as.wmppp(X)  # Plot the point pattern, using PointType as marks autoplot(X, main=\"Original pattern\")   # Randomize it Y <- rPopulationIndependenceK(X, \"A\", \"B\") # Points of type \"A\" are unchanged, points of type \"B\" have been moved altogether # Other points are lost and point weights are set to 1 autoplot(Y, main=\"Randomized pattern\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"Simulates point pattern according null hypothesis population independence defined M","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"","code":"rPopulationIndependenceM(X, ReferenceType, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"X weighted, marked, planar point pattern (wmppp.object). ReferenceType One point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"Reference points kept unchanged, points redistributed randomly across locations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"new weighted, marked, planar point pattern (object class wmppp, see wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"Marcon, E. Puech, F. (2010). Measures Geographic Concentration Industries: Improving Distance-Based Methods. Journal Economic Geography 10(5): 745-762. Marcon, E., F. Puech S. Traissac (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/rPopulationIndependenceM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulations of a point pattern according to the null hypothesis of population independence defined for M — rPopulationIndependenceM","text":"","code":"# Simulate a point pattern with five types X <- rpoispp(50)  PointType   <- sample(c(\"A\", \"B\", \"C\", \"D\", \"E\"), X$n, replace=TRUE) PointWeight <- runif(X$n, min=1, max=10) X$marks <- data.frame(PointType, PointWeight) X <- as.wmppp(X)   autoplot(X, main=\"Original pattern\")   # Randomize it Y <- rPopulationIndependenceM(X, \"A\") # Points of type \"A\" are unchanged,  # all other points have been redistributed randomly across locations autoplot(Y, main=\"Randomized pattern\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"Simulates point pattern according null hypothesis random labeling.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"","code":"rRandomLabeling(X, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"X weighted, marked, planar point pattern (wmppp.object). CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"Marks redistributed randomly across original point pattern.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"new weighted, marked, planar point pattern (object class wmppp, see wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"Goreaud, F. et Pelissier, R. (2003). Avoiding misinterpretation biotic interactions intertype K12 fonction: population independence vs random labelling hypotheses. Journal Vegetation Science 14(5): 681-692.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabeling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulations of a point pattern according to the null hypothesis of random labeling — rRandomLabeling","text":"","code":"# Simulate a point pattern with five types X <- rpoispp(50)  PointType   <- sample(c(\"A\", \"B\", \"C\", \"D\", \"E\"), X$n, replace=TRUE) PointWeight <- runif(X$n, min=1, max=10) X$marks <- data.frame(PointType, PointWeight) X <- as.wmppp(X)  autoplot(X, main=\"Original pattern\")   # Randomize it Y <- rRandomLabeling(X) # Types and weights have been redistributed randomly across locations autoplot(Y, main=\"Randomized pattern\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"Simulates point pattern according null hypothesis random labelling defined M","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"","code":"rRandomLabelingM(X, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"X weighted, marked, planar point pattern (wmppp.object) Dtable object. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"Point types randomized. Locations weights kept unchanged. types weights must randomized together (Duranton Overman, 2005; Marcon Puech, 2010), use rRandomLocation.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"new weighted, marked, planar point pattern (object class wmppp, see wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Marcon, E. Puech, F. (2010). Measures Geographic Concentration Industries: Improving Distance-Based Methods. Journal Economic Geography 10(5): 745-762. Marcon, E., F. Puech S. Traissac (2012). Characterizing relative spatial structure point patterns. International Journal Ecology 2012(Article ID 619281): 11.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLabelingM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulations of a point pattern according to the null hypothesis of random labelling defined for M — rRandomLabelingM","text":"","code":"# Simulate a point pattern with five types X <- rpoispp(50)  PointType   <- sample(c(\"A\", \"B\", \"C\", \"D\", \"E\"), X$n, replace=TRUE) PointWeight <- runif(X$n, min=1, max=10) X$marks <- data.frame(PointType, PointWeight) X <- as.wmppp(X)  autoplot(X, main=\"Original pattern\")   # Randomize it Y <- rRandomLabelingM(X) # Labels have been redistributed randomly across locations # But weights are unchanged autoplot(Y, main=\"Randomized pattern\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"Simulates point pattern according null hypothesis random location.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"","code":"rRandomLocation(X, ReferenceType = \"\", CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"X weighted, marked, planar point pattern (wmppp.object). ReferenceType One point types. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"Points redistributed randomly across locations original point pattern. randomization equivalent random labeling, considering label point type point weight.   ReferenceType specified, reference type points kept orginal point pattern randomization.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"new weighted, marked, planar point pattern (object class wmppp, see wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106. Marcon, E. Puech, F. (2010). Measures Geographic Concentration Industries: Improving Distance-Based Methods. Journal Economic Geography 10(5): 745-762.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomLocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulations of a point pattern according to the null hypothesis of random location — rRandomLocation","text":"","code":"# Simulate a point pattern with five types X <- rpoispp(50)  PointType   <- sample(c(\"A\", \"B\", \"C\", \"D\", \"E\"), X$n, replace=TRUE) PointWeight <- runif(X$n, min=1, max=10) X$marks <- data.frame(PointType, PointWeight) X <- as.wmppp(X)  autoplot(X, main=\"Original pattern\")   # Randomize it Y <- rRandomLocation(X) # Points have been redistributed randomly across locations autoplot(Y, main=\"Randomized pattern\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"Simulations point pattern according null hypothesis random position defined K.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"","code":"rRandomPositionK(X, Precision = 0, CheckArguments = TRUE)"},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"X weighted, marked, planar point pattern (wmppp.object). Precision Accuracy point coordinates, measured part distance unit. See notes. Default 0 approximation. CheckArguments Logical; TRUE, function arguments verified. set FALSE save time simulations example, arguments checked elsewhere.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"Points marks kept unchanged position drawn binomial process runifpoint.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"new weighted, marked, planar point pattern (object class wmppp, see wmppp.object).","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"Simulations binomial process keeps number points, marks can redistributed. real CSR simulation needed marks useless, use rpoispp. Actual data coordinates often rounded. Use Precision argument simulate point patterns rounding procedure. example, point coordinates meters rounded nearest half meter, use Precision = 0.5 approximation applied simulated point patterns.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/rRandomPositionK.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulations of a point pattern according to the null hypothesis of random position defined for K — rRandomPositionK","text":"","code":"# Simulate a point pattern with two types X <- rpoispp(5)  PointType   <- sample(c(\"A\", \"B\"), X$n, replace=TRUE) PointWeight <- runif(X$n, min=1, max=10) X$marks <- data.frame(PointType, PointWeight) X <- as.wmppp(X)  autoplot(X, main=\"Original pattern\")   # Randomize it Y <- rRandomPositionK(X) # Points are randomly distributed autoplot(Y, main=\"Randomized pattern\")"},{"path":"https://ericmarcon.github.io/dbmss/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. ggplot2 autoplot","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/summary.dbmssEnvelope.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of a confidence envelope — summary.dbmssEnvelope","title":"Summary of a confidence envelope — summary.dbmssEnvelope","text":"Prints useful summary confidence envelope class \"dbmssEnvelope\"","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/summary.dbmssEnvelope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of a confidence envelope — summary.dbmssEnvelope","text":"","code":"# S3 method for dbmssEnvelope summary(object, ...)"},{"path":"https://ericmarcon.github.io/dbmss/reference/summary.dbmssEnvelope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of a confidence envelope — summary.dbmssEnvelope","text":"object object class \"dbmssEnvelope\". ... Ignored.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/summary.dbmssEnvelope.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary of a confidence envelope — summary.dbmssEnvelope","text":"\"dbmssEnvelope\" objects similar envelope objects. summary different take account possibility building global envelope following Duranton Overman (2005):  global envelope calculated iteration: simulations reaching one upper lower values distance eliminated step. process repeated Alpha / Number simulations simulations dropped. remaining upper lower bounds distances constitute global envelope. Interpolation used exact ratio reached.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/summary.dbmssEnvelope.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary of a confidence envelope — summary.dbmssEnvelope","text":"Duranton, G. Overman, H. G. (2005). Testing Localisation Using Micro-Geographic Data. Review Economic Studies 72(4): 1077-1106","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/summary.dbmssEnvelope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of a confidence envelope — summary.dbmssEnvelope","text":"","code":"data(paracou16) autoplot(paracou16)   # Calculate intertype K envelope Envelope <- KEnvelope(paracou16, NumberOfSimulations = 20, Global = TRUE,   ReferenceType = \"V. Americana\", NeighborType = \"Q. Rosea\") autoplot(Envelope)  summary(Envelope) #> Global critical envelopes obtained from 20 simulations of \"K\"[\"V..Americana\", \"Q..Rosea\"](r) under the null hypothesis: Random Position  #> (All 20 simulated function values are stored in attr(, “simfuns” ) ) #> Significance level of Monte Carlo test: 0.05  #> Data: X"},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Weighted, Marked, Planar Point Pattern — wmppp","title":"Create a Weighted, Marked, Planar Point Pattern — wmppp","text":"Creates object class \"wmppp\" representing two-dimensional point pattern weights labels.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Weighted, Marked, Planar Point Pattern — wmppp","text":"","code":"wmppp(df, window = NULL, unitname = NULL)"},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Weighted, Marked, Planar Point Pattern — wmppp","text":"df dataframe least two columns containing point coordinates. window object calls \"owin\" (owin.object). unitname Name unit length. Either single character string, vector two character strings giving singular plural forms, respectively. Ignored window NULL.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Weighted, Marked, Planar Point Pattern — wmppp","text":"Columns named \"X\", \"Y\", \"PointType\", \"PointWeight\" (capitalization ignored) searched build \"wmppp\" object set point coordinates, type weight. found, columns used order. columns missing, PointType set \"\" PointWeight 1.   \"PointName\" column found, used set row names marks, else original row names used. window specified, rectangle containing points used, unitname used.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Weighted, Marked, Planar Point Pattern — wmppp","text":"object class \"wmppp\".","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Weighted, Marked, Planar Point Pattern — wmppp","text":"","code":"# Draw the coordinates of 10 points X <- runif(10) Y <- runif(10) # Draw the point types. PointType   <- sample(c(\"A\", \"B\"), 10, replace=TRUE) # Plot the point pattern. Weights are set to 1 ant the window is adjusted. plot(wmppp(data.frame(X, Y, PointType)), , which.marks=2) #> Warning: No column has been found for PointWeight. All point weights have been set to 1. #> Warning: No window has been specified. A rectangle window containing all points has been used."},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.object.html","id":null,"dir":"Reference","previous_headings":"","what":"Class of Weighted, Marked, Planar Point Patterns — wmppp.object","title":"Class of Weighted, Marked, Planar Point Patterns — wmppp.object","text":"class \"wmppp\" represent two-dimensional point pattern class ppp whose marks dataframe two columns: PointType: labels, factors PointWeight: weights.","code":""},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.object.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class of Weighted, Marked, Planar Point Patterns — wmppp.object","text":"class represents two-dimensional point pattern dataset. wmppp objects also class ppp. Objects class wmppp may created function wmppp converted types data function .wmppp.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/reference/wmppp.object.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class of Weighted, Marked, Planar Point Patterns — wmppp.object","text":"","code":"# Draw the coordinates of 10 points X <- runif(10) Y <- runif(10) # Draw the point types and weights PointType   <- sample(c(\"A\", \"B\"), 10, replace=TRUE) PointWeight <- runif(10) # Build the point pattern X <- wmppp(data.frame(X, Y, PointType, PointWeight), owin())  # Plot the point pattern. which.marks=1 for point weights, 2 for point types par(mfrow=c(1,2)) plot(X, which.marks=1, main=\"Point weights\") plot(X, which.marks=2, main=\"Point types\")   # Or use autoplot for a ggplot autoplot(X)"},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-28-2","dir":"Changelog","previous_headings":"","what":"dbmss 2.8-2","title":"dbmss 2.8-2","text":"CRAN release: 2023-05-21","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-8-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.8-2","text":"C code cleaned .","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"external-changes-2-8-2","dir":"Changelog","previous_headings":"","what":"External changes","title":"dbmss 2.8-2","text":"Dhat() code modified according spatstat.explore v.3.2-1 new features (thanks Prof. Adrian Baddeley).","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-28-0","dir":"Changelog","previous_headings":"","what":"dbmss 2.8-0","title":"dbmss 2.8-0","text":"CRAN release: 2023-01-06","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-8-0","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.8-0","text":"kwmppp() creates kriged, weighted, marked, planar point pattern map individual distance-based statistics. plot.kwmppp() (called plot()) allows plotting kwmppp objects. argument verbose envelope functions allows hide progress simulations.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-11","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-11","title":"dbmss 2.7-11","text":"CRAN release: 2022-11-08","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-7-11","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.7-11","text":"Ktest() automatically drops 0 r avoid obscure error message.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"external-changes-2-7-11","dir":"Changelog","previous_headings":"","what":"External changes","title":"dbmss 2.7-11","text":"Updates spatstat package: dbmss updated address replacement spatstat.core.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-10","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-10","title":"dbmss 2.7-10","text":"CRAN release: 2022-07-10","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-7-10","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.7-10","text":"dbmss longer depends ggplot2. Deprecated aes_(x=~var) aesthetics ggplots replaced aes(x=.data$var). documentation improvements.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-8","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-8","title":"dbmss 2.7-8","text":"CRAN release: 2022-01-25","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"external-changes-2-7-8","dir":"Changelog","previous_headings":"","what":"External changes","title":"dbmss 2.7-8","text":"new package spatstat.random now imported.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-7","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-7","title":"dbmss 2.7-7","text":"CRAN release: 2021-08-22","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"external-changes-2-7-7","dir":"Changelog","previous_headings":"","what":"External changes","title":"dbmss 2.7-7","text":"Following R fixed bug PR#18151, mhat() code modified Martin Maechler.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-6","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-6","title":"dbmss 2.7-6","text":"CRAN release: 2021-06-04","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-correction-2-7-6","dir":"Changelog","previous_headings":"","what":"Bug correction","title":"dbmss 2.7-6","text":"error occurred function called dbmss:: prefix CheckArguments = TRUE dbmss loaded.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-5","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-5","title":"dbmss 2.7-5","text":"CRAN release: 2021-04-16","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-7-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.7-5","text":"fmla argument added autoplot.envelope(). autoplot.fv() added. autoplot.wmppp() added. CodeFactor optimization applied. Suggests rmarkdown (https://github.com/yihui/knitr/issues/1864)","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-4","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-4","title":"dbmss 2.7-4","text":"CRAN release: 2021-01-25","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-7-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.7-4","text":"Continuous integration GitHub Actions.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"external-changes-2-7-4","dir":"Changelog","previous_headings":"","what":"External changes","title":"dbmss 2.7-4","text":"Updates spatstat package: dbmss updated address creation spatstat.core et al.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-3","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-3","title":"dbmss 2.7-3","text":"CRAN release: 2020-11-01","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-7-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.7-3","text":"argument main autoplot() ignored.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-1","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-1","title":"dbmss 2.7-1","text":"CRAN release: 2020-01-08","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-7-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.7-1","text":"tibbles accepted wmppp(). Precision point coordinates can set rRandomPositionK().","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-7-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.7-1","text":"autoplot() failed Lenvelope objects.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-27-0","dir":"Changelog","previous_headings":"","what":"dbmss 2.7-0","title":"dbmss 2.7-0","text":"CRAN release: 2019-03-25","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-7-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.7-0","text":"autoplot() envelope objects. Vignettes pkgdown Better consistency bandwidth choice Kd m estimation. article added online documentation.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"internal-changes-2-7-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"dbmss 2.7-0","text":"Fewer imported functions NAMESPACE.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-7-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.7-0","text":"Kdhat() density normalized incorrectly Approximate=TRUE small r values.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-26-3","dir":"Changelog","previous_headings":"","what":"dbmss 2.6-3","title":"dbmss 2.6-3","text":"CRAN release: 2018-03-19","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-6-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.6-3","text":"robust check arguments. Rcpp >= 0.12.14 required. init.c longer necessary. Introduction vignette. Travis codecov.io now. NEWS Markdown. wmppp() accepts characters PointType. PointName column searched set row names marks.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-6-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.6-3","text":"wmppp() failed point laid outside window.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-25-1","dir":"Changelog","previous_headings":"","what":"dbmss 2.5-1","title":"dbmss 2.5-1","text":"CRAN release: 2017-11-28","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"new-features-2-5-1","dir":"Changelog","previous_headings":"","what":"New features","title":"dbmss 2.5-1","text":"GitHub now. Individual values m M available Mhat mhat argument Individual. Point names can specified row names dataframe passed wmppp(). preserved fv object returned individual Mhat mhat identify points easily.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-5-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.5-1","text":"Far less memory used compute M approximated m functions. ratio necessary memory equals number reference points total number points. [.wmppp function added spatstat generics","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"improvements-2-4-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"dbmss 2.4-1","text":"Declaration required versions R spatstat DESCRIPTION avoid error CRAN test oldrel Windows platform.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-24-0","dir":"Changelog","previous_headings":"","what":"dbmss 2.4-0","title":"dbmss 2.4-0","text":"CRAN release: 2017-03-26","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"external-changes-2-4-0","dir":"Changelog","previous_headings":"","what":"External changes","title":"dbmss 2.4-0","text":"Updates spatstat package: dbmss updated address creation spatstat.util.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"internal-changes-2-4-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"dbmss 2.4-0","text":"C routines registration comply R 3.4 policy. Explicit export non-internal functions instead exportPattern(\"^[[:alpha:]]+\"). Import package cubature reduced function adaptIntegrate().","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-23-0","dir":"Changelog","previous_headings":"","what":"dbmss 2.3-0","title":"dbmss 2.3-0","text":"CRAN release: 2016-09-19","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"internal-changes-2-3-0","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"dbmss 2.3-0","text":"Enforcement use C++11 avoid warnings due RcppParallel.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-22-5","dir":"Changelog","previous_headings":"","what":"dbmss 2.2-5","title":"dbmss 2.2-5","text":"CRAN release: 2016-06-30","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-2-5","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.2-5","text":"Distance matrices can used instead point patterns Mhat, mhat Kdhat envelopes. estimation density used Kd now includes reflection: estimation Kd accurate , values may vary previous versions close minimum distance. LazyData used save memory.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-2-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.2-5","text":"Weighted argument ignored Kdhat (bug introduced v.2.2-4). Fixed.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"dbmss-22-4","dir":"Changelog","previous_headings":"","what":"dbmss 2.2-4","title":"dbmss 2.2-4","text":"CRAN release: 2015-12-10","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-2-4","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.2-4","text":"Mhat mhat C++ code now parallelized thanks RcppParallel. Small performance improvement Kdhat (around 5% faster).","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-2-3","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.2-3","text":"Updated CITATION: paper package published: Eric Marcon, Stephane Traissac, Florence Puech, Gabriel Lang (2015). Tools Characterize Point Patterns: dbmss R. Journal Statistical Software, 67(3), 1-15.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"minor-change-2-2-2","dir":"Changelog","previous_headings":"","what":"Minor change","title":"dbmss 2.2-2","text":"Intervals estimation Kd function narrower distance range small respect window improve precision.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.2-2","text":"Distances pairs twice maximum value r ignored using approximate estimation Kd, Kd overestimated r smaller usual (much less default values). Corrected.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-2-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.2-1","text":"Adjust argument ignored Kdhat. Fixed.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-2-0","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.2-0","text":"m function added. Default value Controls=NULL Dhat: controls default points except cases. Kd m computed default one third diameter window, options added. Original Adjust arguments allow change default bandwith used Kd m.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"minor-change-2-2-0","dir":"Changelog","previous_headings":"","what":"Minor change","title":"dbmss 2.2-0","text":"Typo internal function name FillEnveloppe corrected: FillEnvelope new name.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-1-2","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.1-2","text":"Default neighbor type Khat Kenvelope reference type instead ““. Kd estimation now accepts “” reference type use points. Approximate argument calculate Kd big data sets little RAM.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-1-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.1-2","text":"FillEnvelope returned wrong quantiles local confidence intervals. Fixed.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-1-1","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.1-1","text":"Global confidence intervals now defined even NA values found simulations. Kd computed default median (instead mean) distance points.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.1-1","text":"Kdhat Reference Neighbor points different types calculated half point pairs sometimes crashed R. Fixed.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-1-0","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.1-0","text":"Kdhat M computed C++ loops instead spatstat pairdist(). Much faster, uses far less memory.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-0-6","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.0-6","text":"Kdhat M propose default value argument r. Vignette added.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"minor-change-2-0-6","dir":"Changelog","previous_headings":"","what":"Minor change","title":"dbmss 2.0-6","text":"Kdhat probability density estimation cut lowest distance points instead 0.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-2-0-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 2.0-5","text":"Kdhat Reference Neighbor points type Weighted=TRUE returned error. Fixed.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"overview-2-0-3","dir":"Changelog","previous_headings":"","what":"Overview","title":"dbmss 2.0-3","text":"Minor corrections, mainly comments formating.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"overview-2-0-0","dir":"Changelog","previous_headings":"","what":"Overview","title":"dbmss 2.0-0","text":"code rewritten.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 2.0-0","text":"Names functions X.r became Xhat. Point patterns now class wmppp. Results class fv, envelopes class envelope.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"overview-1-2-5","dir":"Changelog","previous_headings":"","what":"Overview","title":"dbmss 1.2-5","text":"NEWS file added.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"overview-1-2-4","dir":"Changelog","previous_headings":"","what":"Overview","title":"dbmss 1.2-4","text":"Documentation format improved.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"significant-user-visible-changes-1-2-4","dir":"Changelog","previous_headings":"","what":"Significant user-visible changes","title":"dbmss 1.2-4","text":"default behavior Kd Duranton Overman (2005). optional parameter added used improved bandwith selection.","code":""},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"bug-fixes-1-2-4","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"dbmss 1.2-4","text":"density estimation Kd run twice. Fixed.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"id_-overview-1-2-3","dir":"Changelog","previous_headings":"","what":"## Overview","title":"dbmss 1.2-3","text":"First version CRAN. Versions 1.2.2 1.2.3 contain faster examples follow CRAN requirements.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"overview-1-2-1","dir":"Changelog","previous_headings":"","what":"Overview","title":"dbmss 1.2-1","text":"Kinhom function added.","code":""},{"path":[]},{"path":"https://ericmarcon.github.io/dbmss/news/index.html","id":"overview-1-1","dir":"Changelog","previous_headings":"","what":"Overview","title":"dbmss 1.1","text":"First version.","code":""}]
